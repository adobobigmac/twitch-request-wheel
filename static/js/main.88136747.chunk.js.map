{"version":3,"sources":["MessageHandler.js","AuthenticatedApp.js","App.js","reportWebVitals.js","index.js"],"names":["randomColor","require","tmi","GAME_REQUEST_COMMAND","GameRequest","delete","e","props","onDelete","msg","style","backgroundColor","textAlign","borderRadius","textTransform","margin","display","justifyContent","alignItems","this","type","onClick","float","height","color","fontSize","Component","MessageHandler","onGameChosen","game","console","log","removeGame","newMessageSet","Set","state","messages","setState","counter","onMessage","target","tags","self","message","startsWith","replace","trim","toLowerCase","filterGameCommands","has","sendMessage","username","add","client","say","channel","colors","count","luminosity","hue","identity","password","access_token","channels","on","connect","JSON","stringify","gameArray","Array","from","width","marginBottom","marginTop","fontWeight","map","i","overflow","segments","segColors","onFinished","isOnlyOnce","size","upDuration","downDuration","primaryColor","contrastColor","fetch","AuthenticatedApp","LoginHelper","a","URLSearchParams","grant_type","code","window","location","search","get","client_id","process","client_secret","redirect_uri","method","headers","Accept","then","r","json","oauth","href","origin","Authorization","userInfo","data","login","App","loginUrl","basename","to","exact","path","className","padding","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVAEMA,EAAcC,EAAQ,IACtBC,EAAMD,EAAQ,IAEdE,EAAuB,WAWvBC,E,4MAEJC,OAAS,SAACC,GACR,EAAKC,MAAMC,SAAS,EAAKD,MAAME,M,4CAGjC,WACE,OACE,qBAAKC,MAAO,CAACC,gBAAgB,YAAaC,UAAW,OAAQC,aAAc,MAAOC,cAAe,cAAjG,SACA,oBAAGJ,MAAO,CAACK,OAAQ,OAAQC,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,UAAzF,UACGC,KAAKZ,MAAME,IACZ,wBAAQW,KAAK,SAASC,QAASF,KAAKd,OAAQK,MAAO,CAACC,gBAAgB,MAAOW,MAAO,QAASC,OAAQ,MAAOC,MAAO,QAASC,SAAU,QAApI,wB,GAXkBC,aAmBLC,E,kDACnB,WAAYpB,GAAO,IAAD,8BAChB,cAAMA,IAQRqB,aAAe,SAACC,GACdC,QAAQC,IAAI,gBAAkBF,IAVd,EAalBG,WAAa,SAACH,GACZC,QAAQC,IAAIF,GACZ,IAAMI,EAAgB,IAAIC,IAAI,EAAKC,MAAMC,UACzCH,EAAc5B,OAAOwB,GACrB,EAAKQ,UAAS,SAACF,GACb,OAAO,2BACFA,GADL,IAEEC,SAAUH,EACVK,QAAS,EAAKH,MAAMG,QAAU,QArBlB,EA0BlBC,UAAY,SAACC,EAAQC,EAAMhC,EAAKiC,GAC9B,IAAMb,EArDiB,SAASc,GAClC,GAAIA,EAAQC,WAAWzC,GACvB,OAAOwC,EAAQE,QAAQ1C,EAAsB,IAAI2C,OAAOC,cAmDzCC,CAAmBvC,GAChC,GAAKoB,EACL,GAAG,EAAKM,MAAMC,SAASa,IAAIpB,GACzB,EAAKqB,YAAL,eAAyBT,EAAKU,SAA9B,aAA2CtB,EAA3C,qCADF,CAKA,IAAMI,EAAgB,IAAIC,IAAI,EAAKC,MAAMC,UAAUgB,IAAIvB,GACvD,EAAKQ,UAAS,SAACF,GACb,OAAO,2BACFA,GADL,IAEEC,SAAUH,EACVK,QAAS,EAAKH,MAAMG,QAAU,OAGlC,EAAKY,YAAL,eAAyBT,EAAKU,SAA9B,aAA2CtB,EAA3C,4CA1CgB,EA6ClBqB,YAAc,SAACzC,GACb,EAAK0B,MAAMkB,OAAOC,IAAI,EAAK/C,MAAMgD,QAAS9C,IA5C1C,EAAK0B,MAAQ,CACXC,SAAU,IAAIF,IACdsB,OAAQxD,EAAY,CAACyD,MAAO,GAAIC,WAAY,QAASC,IAAK,SAC1DrB,QAAS,GALK,E,qDAiDlB,SAAkB/B,GAChB,IAAM8C,EAAS,IAAInD,EAAImD,OAAO,CAC5BO,SAAU,CACRT,SAAUhC,KAAKZ,MAAMgD,QACrBM,SAAU1C,KAAKZ,MAAMuD,cAEvBC,SAAU,CACR5C,KAAKZ,MAAMgD,WAIfF,EAAOW,GAAG,UAAW7C,KAAKoB,WAC1Bc,EAAOY,UAEPnC,QAAQC,IAAImC,KAAKC,UAAUd,IAE3BlC,KAAKkB,UAAS,SAACF,GACb,OAAO,2BACFA,GADL,IAEEkB,gB,oBAKN,WAAU,IAAD,OACDe,EAAYC,MAAMC,KAAKnD,KAAKgB,MAAMC,UACxC,OACE,sBAAK1B,MAAO,CAACM,QAAS,QAAtB,UACE,yBAAQuD,MAAM,OAAd,UACE,oBAAI7D,MAAO,CAAC8D,aAAa,KAAzB,2BACA,qBAAI9D,MAAO,CAACe,SAAS,OAAQgD,UAAW,MAAOD,aAAa,OAAQE,WAAY,KAAhF,mDAA6HvD,KAAKZ,MAAMgD,QAAxI,oBACCa,EAAUO,KAAI,SAAClE,EAAKmE,GAAN,OAAY,cAAC,EAAD,CAAqBnE,IAAKA,EAAKD,SAAU,EAAKwB,YAA5B4C,SAE/C,wBAAQL,MAAM,OAAO7D,MAAO,CAACI,cAAe,cAA5C,SACE,qBAAKJ,MAAO,CAACe,SAAU,OAAQoD,SAAU,SAAUN,MAAO,SAA1D,SACE,cAAC,IAAD,CAEEO,SAAUV,EACVW,UAAW5D,KAAKgB,MAAMqB,OACtBwB,WAAY7D,KAAKS,aACjBqD,YAAY,EACZC,KAAM,IACNC,WAAY,IACZC,aAAc,IACdC,aAAc,QACdC,cAAe,SATVnE,KAAKgB,MAAMG,oB,GAtFcZ,aC/BtC6D,EAAQtF,EAAQ,IAEDuF,E,4JACnB,WACI,OAEM,cAAC,EAAD,Q,GAJkC9D,aAUxC+D,E,kDACJ,aAAc,IAAD,8BACX,gBACKtD,MAAQ,CACXgB,SAAU,GACVW,aAAc,IAJL,E,4FAOb,iCAAA4B,EAAA,sEACQH,EAAM,qCAAuC,IAAII,gBAAgB,CACrEC,WAAY,qBACZC,KAAM,IAAIF,gBAAgBG,OAAOC,SAASC,QAAQC,IAAI,QACtDC,UAAWC,iCACXC,cAAeD,iCACfE,aAAcF,6DACZ,CACFG,OAAQ,OACRC,QAAS,CACPC,OAAQ,sCAETC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACdF,MAAK,SAACG,GAEDA,EAAM9C,eACRgC,OAAOC,SAASc,KAAOf,OAAOC,SAASe,QAGzC,EAAKzE,UAAS,SAACF,GACb,OAAO,2BACFA,GADL,IAEE2B,aAAc8C,EAAM9C,kBAIxByB,EAAM,oCAAqC,CACzCgB,QAAS,CACP,YAAaJ,iCACbY,cAAc,UAAD,OAAYH,EAAM9C,iBAGlC2C,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAO,GAEJ,EAAK3E,UAAS,SAACF,GACb,OAAO,2BACFA,GADL,IAEEgB,SAAU6D,EAASC,KAAK,GAAGC,iBAtCrC,2C,0EA6CA,WACE,OACE,4BACG/F,KAAKgB,MAAMgB,UAAY,cAAC,EAAD,CAAgBI,QAASpC,KAAKgB,MAAMgB,SAAUW,aAAc3C,KAAKgB,MAAM2B,qB,GAxD7EpC,aCaXyF,E,4JAtBb,WACE,IAAMC,EAAQ,0DAAsDjB,iCAAtD,yBAA6GA,2DAA7G,iDACd,OACE,eAAC,IAAD,CAAYkB,SAAS,IAArB,UACA,6BAAI,cAAC,IAAD,CAAMC,GAAG,SAAT,qBACJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACI,mBAAGZ,KAAMO,EAAU1G,MAAO,CAACC,gBAAiB,gBAAiBE,aAAc,MAAO6G,QAAS,OAAQlG,MAAO,SAA1G,sCAIR,cAAC,IAAD,CAAOgG,KAAK,SAAZ,SACE,cAAC,EAAD,gB,GAfQ9F,aCMHiG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.88136747.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport WheelComponent from 'react-wheel-of-prizes'\r\nconst randomColor = require('randomcolor');\r\nconst tmi = require('tmi.js');\r\n\r\nconst GAME_REQUEST_COMMAND = \"!request\";\r\nconst column = function(width) {\r\n  return (<div style={{float:'left', width:width}} />);\r\n}\r\n\r\nconst filterGameCommands = function(message) {\r\n  if(!message.startsWith(GAME_REQUEST_COMMAND)) return;\r\n  return message.replace(GAME_REQUEST_COMMAND, \"\").trim().toLowerCase();\r\n}\r\n\r\n\r\nclass GameRequest extends Component {\r\n\r\n  delete = (e) => {\r\n    this.props.onDelete(this.props.msg)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{backgroundColor:'steelblue', textAlign: 'left', borderRadius: '8px', textTransform: 'capitalize'}}>\r\n      <p style={{margin: '15px', display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\r\n        {this.props.msg}\r\n        <button type='button' onClick={this.delete} style={{backgroundColor:'red', float: 'right', height: '50%', color: 'white', fontSize: '16px'}}>X</button>\r\n      </p>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class MessageHandler extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      messages: new Set(),\r\n      colors: randomColor({count: 99, luminosity: 'light', hue: 'blue'}),\r\n      counter: 0\r\n    };\r\n  }\r\n\r\n  onGameChosen = (game) => {\r\n    console.log(\"Game chosen: \" + game)\r\n  }\r\n\r\n  removeGame = (game) => {\r\n    console.log(game)\r\n    const newMessageSet = new Set(this.state.messages)\r\n    newMessageSet.delete(game)\r\n    this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        messages: newMessageSet,\r\n        counter: this.state.counter + 1\r\n      };\r\n    })\r\n  }\r\n\r\n  onMessage = (target, tags, msg, self) => {\r\n    const game = filterGameCommands(msg);\r\n    if (!game) return;\r\n    if(this.state.messages.has(game)) {\r\n      this.sendMessage(`/me @${tags.username}, ${game} has already been requested!`);\r\n      return;\r\n    }\r\n\r\n    const newMessageSet = new Set(this.state.messages).add(game)\r\n    this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        messages: newMessageSet,\r\n        counter: this.state.counter + 1\r\n      };\r\n    })\r\n    this.sendMessage(`/me @${tags.username}, ${game} has been added to the request queue.`);\r\n  }\r\n\r\n  sendMessage = (msg) => {\r\n    this.state.client.say(this.props.channel, msg)\r\n  }\r\n\r\n  componentDidMount(props) {\r\n    const client = new tmi.client({\r\n      identity: {\r\n        username: this.props.channel,\r\n        password: this.props.access_token\r\n      },\r\n      channels: [\r\n        this.props.channel\r\n      ]\r\n    });\r\n\r\n    client.on('message', this.onMessage);\r\n    client.connect();\r\n\r\n    console.log(JSON.stringify(client));\r\n\r\n    this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        client\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const gameArray = Array.from(this.state.messages);\r\n    return (\r\n      <div style={{display: 'flex'}}>\r\n        <column width=\"50vw\">\r\n          <h2 style={{marginBottom:\"0\"}}>Game Requests</h2>\r\n          <h4 style={{fontSize:\"12px\", marginTop: \"6px\", marginBottom:\"12px\", fontWeight: 400}}>Type e.g. \"!request Blather Round\" in {this.props.channel}'s chat to add</h4>\r\n          {gameArray.map((msg, i) => <GameRequest key={i} msg={msg} onDelete={this.removeGame}/>)}\r\n        </column>\r\n        <column width=\"50vw\" style={{textTransform: 'capitalize'}}>\r\n          <div style={{fontSize: \"16px\", overflow: \"hidden\", width: \"600px\"}}>\r\n            <WheelComponent\r\n              key={this.state.counter}\r\n              segments={gameArray}\r\n              segColors={this.state.colors}\r\n              onFinished={this.onGameChosen}\r\n              isOnlyOnce={false}\r\n              size={250}\r\n              upDuration={100}\r\n              downDuration={1000}\r\n              primaryColor={\"white\"}\r\n              contrastColor={\"black\"}\r\n            />\r\n          </div>\r\n        </column>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport MessageHandler from './MessageHandler';\r\nconst fetch = require('node-fetch');\r\n\r\nexport default class AuthenticatedApp extends Component {\r\n  render() {\r\n      return (\r\n\r\n            <LoginHelper />\r\n\r\n      );\r\n    }\r\n}\r\n\r\nclass LoginHelper extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      access_token: \"\"\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    await fetch('https://id.twitch.tv/oauth2/token?' + new URLSearchParams({\r\n      grant_type: 'authorization_code',\r\n      code: new URLSearchParams(window.location.search).get('code'),\r\n      client_id: process.env.REACT_APP_TWITCH_CLIENT_ID,\r\n      client_secret: process.env.REACT_APP_TWITCH_CLIENT_SECRET,\r\n      redirect_uri: process.env.REACT_APP_REDIRECT_URI\r\n    }), {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/vnd.twitchtv.v5+json'\r\n      }\r\n    }).then(r => r.json())\r\n    .then((oauth) => {\r\n      //console.log(oauth); // access_token, refresh_token, expires_in, scope ['...']\r\n      if(!oauth.access_token) {\r\n        window.location.href = window.location.origin;\r\n      }\r\n\r\n      this.setState((state) => {\r\n        return {\r\n          ...state,\r\n          access_token: oauth.access_token\r\n        };\r\n      });\r\n\r\n      fetch('https://api.twitch.tv/helix/users', {\r\n        headers: {\r\n          'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\r\n          Authorization: `Bearer ${oauth.access_token}`\r\n        }\r\n      })\r\n      .then(r => r.json())\r\n      .then(userInfo => {\r\n        //console.log(userInfo); //login [aka lowercase username?], display_name, profile_image_url, description\r\n        this.setState((state) => {\r\n          return {\r\n            ...state,\r\n            username: userInfo.data[0].login,\r\n          };\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <p>\r\n        {this.state.username && <MessageHandler channel={this.state.username} access_token={this.state.access_token} />}\r\n      </p>\r\n    )\r\n  }\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport { HashRouter, Route, Switch, Link } from \"react-router-dom\";\nimport AuthenticatedApp from \"./AuthenticatedApp\";\n\nclass App extends Component {\n  render() {\n    const loginUrl = `https://id.twitch.tv/oauth2/authorize?client_id=${process.env.REACT_APP_TWITCH_CLIENT_ID}&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}&response_type=code&scope=chat:read chat:edit`\n    return (\n      <HashRouter basename='/'>\n      <li><Link to=\"/login\">LOGIN</Link></li>\n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"App\">\n            <header className=\"App-header\">\n                <a href={loginUrl} style={{backgroundColor: 'rebeccapurple', borderRadius: '5px', padding: '10px', color: 'white'}}>Log In With Twitch</a>\n            </header>\n          </div>\n        </Route>\n        <Route path=\"/login\">\n          <AuthenticatedApp />\n        </Route>\n      </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}