{"version":3,"sources":["ChatActivity.js","lock.svg","GameRequest.js","JackboxGames.yaml","MessageHandler.js","Sidebar.js","MainScreen.js","JackboxGameList.js","AuthenticatedApp.js","App.js","reportWebVitals.js","index.js"],"names":["fetch","require","ActivityStatus","ChatActivity","channel","updateLastMessageTime","user","lastMessageTimes","Date","now","minsSinceLastChatMessage","Math","floor","getChatters","then","r","json","res","chatters","moderators","viewers","staff","admins","global_mods","catch","e","this","getStatusPromise","bind","a","includes","GameRequest","props","getFormattedTimeDiff","timestamp","unit","timeDiff","updateStatus","getActivity","metadata","username","activityStatus","setState","state","time","delete","onDelete","msg","toggleLock","getTooltipContents","statusClass","lockOpacity","locked","cardStatus","chosen","effect","place","id","className","data-tip","data-html","onMouseEnter","style","margin","padding","fontSize","display","justifyContent","alignItems","src","lock","alt","width","opacity","paddingRight","onClick","type","Component","tmi","GAME_REQUEST_COMMAND","MessageHandler","checkForMiscCommands","message","sendMessage","process","modList","toLowerCase","advanceNextGame","upcomingGames","gameName","startsWith","requestedGame","replace","trim","matchGameName","numGamesAhead","setNextGame","partyPackName","validGames","partyPack","Object","entries","formalGameName","checkForGameCommand","onMessage","target","tags","self","cleanedMsg","game","messages","prevGame","addGameRequest","length","upcoming","i","client","say","identity","password","access_token","channels","on","connect","rawJackboxGameList","text","YAML","parse","Sidebar","printGame","idx","nextGameIdx","color","history","index","marginLeft","textTransform","backgroundColor","borderRadius","marginTop","marginBottom","fontWeight","height","moveNextGameBack","marginRight","moveNextGameFwd","map","playedGame","randomColor","MainScreen","counter","stateCopy","override","slice","max","addGameToQueue","onWheelSpun","keys","requester","chatActivity","status","messageHandler","setTimeout","removeGame","newMessageObj","colors","count","luminosity","hue","logOutBtn","gameArray","onLogout","position","top","right","paddingBottom","paddingTop","ref","mh","flexGrow","overflow","segments","segColors","onFinished","isOnlyOnce","size","upDuration","downDuration","primaryColor","contrastColor","PartyPackCard","gameList","possibleMatches","GameCard","possibleMatch","JackboxGameList","partyPackList","AuthenticatedApp","localStorage","getItem","failed_login","getAuth","logOut","headers","Authorization","userInfo","setItem","data","login","modInfo","modObj","user_name","removeItem","URLSearchParams","client_id","token","redirect_uri","method","Accept","window","location","reload","console","error","queryParams","queryString","search","grant_type","code","client_secret","oauth","pathname","to","withRouter","loginScreen","loginUrl","href","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oZAAMA,EAAQC,EAAQ,IAETC,EACH,EADGA,EAEL,EAFKA,EAGG,EAKKC,E,WACnB,WAAYC,GAAU,IAAD,gCAMrBC,sBAAwB,SAACC,GACvB,EAAKC,iBAAL,2BACK,EAAKA,kBADV,kBAEGD,EAAOE,KAAKC,SATI,KAarBC,yBAA2B,SAACJ,GAC1B,OAAOK,KAAKC,OAAOJ,KAAKC,MAAM,EAAKF,iBAAiBD,IAAO,MAdxC,KAwBrBO,YAAc,WACZ,OAAOb,EAAM,0EAAD,OAA2E,EAAKI,QAAhF,cACTU,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAG,GACJ,OAAIA,GAAQA,EAAIC,SACV,GAAN,mBACKD,EAAIC,SAASC,YADlB,YAEKF,EAAIC,SAASE,SAFlB,YAGKH,EAAIC,SAASG,OAHlB,YAIKJ,EAAIC,SAASI,QAJlB,YAKKL,EAAIC,SAASK,cANe,QASlCC,OAAM,SAACC,GAIN,OAAO,SAxCXC,KAAKtB,QAAUA,EACfsB,KAAKnB,iBAAmB,GACxBmB,KAAKC,iBAAmBD,KAAKC,iBAAiBC,KAAKF,M,2FA0CrD,WAAuBpB,GAAvB,SAAAuB,EAAA,yDAEKvB,IAASoB,KAAKtB,QAFnB,yCAGWF,GAHX,YAOKwB,KAAKnB,iBAAiBD,IAASoB,KAAKhB,yBAAyBJ,GAvDtC,IAgD5B,yCAQWJ,GARX,gCAWSwB,KAAKb,cAAcC,MAAK,SAACI,GAAD,OAC5BA,GAAaA,EAASY,SAASxB,GAE1BJ,EADAA,MAbV,gD,8DCxDa,G,MAAA,IAA0B,kC,OCMpB6B,E,kDACnB,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAORC,qBAAuB,SAACC,GACtB,IAAIC,EAAO,SACPC,EAAWzB,KAAKC,OAAOJ,KAAKC,MAAMyB,GAAW,KACjD,OAAgB,IAAbE,EACM,YAENA,GAAY,KACbD,EAAO,QACPC,EAAWzB,KAAKC,MAAMwB,EAAS,MAEhB,KACbD,EAAO,MACPC,EAAWzB,KAAKC,MAAMwB,EAAS,MAG7B,GAAN,OAAUA,EAAV,YAAsBD,GAAtB,OAA0C,IAAbC,EAAiB,GAAK,IAAnD,UAvBgB,EA0BlBC,aAAe,WAEb,EAAKL,MAAMM,YAAY,EAAKN,MAAMO,SAASC,UAAU1B,MAAK,SAAC2B,GACzD,EAAKC,UAAS,WACZ,OAAO,2BACF,EAAKC,OADV,IAEEP,SAAU,EAAKH,qBAAqB,EAAKD,MAAMO,SAASK,MACxDH,0BAjCU,EAsClBI,OAAS,SAACpB,GACR,EAAKO,MAAMc,SAAS,EAAKd,MAAMe,MAvCf,EA0ClBC,WAAa,WACX,EAAKhB,MAAMgB,WAAW,EAAKhB,MAAMe,MA3CjB,EA8ClBE,mBAAqB,WACnB,IAAIC,EAAc,GAClB,OAAO,EAAKP,MAAMF,gBAChB,KAAKvC,EACHgD,EAAc,SACd,MACF,KAAKhD,EACHgD,EAAc,OACd,MACF,KAAKhD,EACHgD,EAAc,eAOlB,MAAM,2EAAN,OAEuC,EAAKP,MAAMP,SAFlD,eAEiE,EAAKJ,MAAMO,SAASC,SAFrF,4CAGyBU,EAHzB,uBA7DA,EAAKP,MAAQ,CACXP,SAAU,EACVK,eAAgB,MAJF,E,0CAsElB,WACE,IAAMU,EAAczB,KAAKM,MAAMO,SAASa,OAAS,IAAM,MACjDC,EAAa3B,KAAKM,MAAMO,SAASe,OAAS,SAAW,UAC3D,OACE,gCACA,cAAC,IAAD,CAAcC,OAAO,QAAQC,MAAM,UACnC,qBACEC,GAAG,UACHC,UAAWL,EACXM,WAAUjC,KAAKuB,qBACfW,aAAW,EACXC,aAAcnC,KAAKW,aALrB,SAOA,sBAAKyB,MAAO,CAACC,OAAQ,eAAgBC,QAAS,MAAOC,SAAU,OAAQC,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,UAArI,UACG1C,KAAKM,MAAMe,IACZ,sBAAKe,MAAO,CAACI,QAAQ,QAArB,UACE,qBAAKG,IAAKC,EAAMC,IAAI,OAAOT,MAAO,CAACU,MAAO,OAAQC,QAAStB,EAAauB,aAAc,OAAQhB,UAAU,OAAOiB,QAASjD,KAAKsB,aAC7H,wBAAQ4B,KAAK,SAASlB,UAAU,eAAeiB,QAASjD,KAAKmB,OAA7D,8B,GAxF+BgC,a,yBCN1B,MAA0B,0CCGnC7E,EAAQC,EAAQ,IAChB6E,EAAM7E,EAAQ,IAEd8E,EAAuB,WAERC,E,kDACnB,WAAYhD,GAAQ,IAAD,8BACjB,cAAMA,IAmCRiD,qBAAuB,SAACC,EAAS1C,GAE/B,GAAe,cAAZ0C,GAAuC,eAAZA,EAE5B,OADA,EAAKC,YAAL,eAAyB3C,EAAzB,2DAAoF4C,qDAApF,eACO,EAIT,GAAe,qBAAZF,EACD,OAAG,EAAKlD,MAAM5B,UAAYoC,GAAa,EAAKR,MAAMqD,QAAQvD,SAASU,EAAS8C,gBAIzE,EAAKtD,MAAMuD,kBACZ,EAAKJ,YAAL,eAAyB3C,EAAzB,gDAAyE,EAAKR,MAAMwD,cAAc,GAAGC,SAArG,MAEA,EAAKN,YAAL,eAAyB3C,EAAzB,2DAEK,IARL,EAAK2C,YAAL,eAAyB3C,EAAzB,qEACO,GAWX,GAAG0C,EAAQQ,WAAW,iBAAmBR,EAAQQ,WAAW,WAAY,CACtE,GAAG,EAAK1D,MAAM5B,UAAYoC,IAAa,EAAKR,MAAMqD,QAAQvD,SAASU,EAAS8C,eAE1E,OADA,EAAKH,YAAL,eAAyB3C,EAAzB,iDAA0E0C,EAAQQ,WAAW,MAAQ,eAAiB,UAAtH,eACO,EAGT,IAAMC,EAAgBT,EAAQU,QAAQ,eAAgB,IAAIA,QAAQ,UAAW,IAAIC,OACjF,GAAqB,KAAlBF,EAED,OADA,EAAKR,YAAL,eAAyB3C,EAAzB,yFAAkH0C,EAAQQ,WAAW,MAAQ,eAAiB,UAA9J,YACO,EAGT,IAAMD,EAAW,EAAKK,cAAcH,GACpC,GAAGF,EAAU,CACX,IAAMM,EAAgB,EAAK/D,MAAMgE,YAAYP,GACxB,IAAlBM,EACD,EAAKZ,YAAL,eAAyB3C,EAAzB,aAAsCiD,EAAtC,sDAEA,EAAKN,YAAL,eAAyB3C,EAAzB,aAAsCiD,EAAtC,qDAA2FM,EAA3F,qCAAqIA,EAAgB,EAAI,IAAM,GAA/J,MAIJ,OAAO,IAhFQ,EAoFnBD,cAAgB,SAACH,EAAenD,GAC9B,IAAI,IAAIyD,KAAiB,EAAKtD,MAAMuD,WAElC,IADA,IAAMC,EAAY,EAAKxD,MAAMuD,WAAWD,GACxC,MAA+CG,OAAOC,QAAQF,GAA9D,eAAyE,CAAC,IAAD,sBAA9DG,EAA8D,KACvE,GADuE,KACpDxE,SAAS6D,GAC1B,MAAM,GAAN,OAAUW,EAAV,aAA6BL,EAA7B,KAKN,OADA,EAAKd,YAAL,eAAyB3C,EAAzB,aAAsCmD,EAAtC,yGAAoJP,qDAApJ,cACO,MA9FU,EAiGnBmB,oBAAsB,SAACrB,EAAS1C,GAC9B,GAAI0C,EAAQQ,WAAWX,GAAvB,CAEA,IAAMY,EAAgBT,EAAQU,QAAQb,EAAsB,IAAIc,OAEhE,MAAqB,KAAlBF,GACD,EAAKR,YAAL,eAAyB3C,EAAzB,qFACO,MAGF,EAAKsD,cAAcH,EAAenD,KA3GxB,EA8GnBgE,UAAY,SAACC,EAAQC,EAAM3D,EAAK4D,GAC9B,IAAGA,EAGH,GAFA,EAAK3E,MAAMwE,UAAUzD,EAAK2D,EAAKlE,SAAUkE,GAEvB,cAAf3D,EAAI8C,OAAP,CAiBA,IAAMe,EAAa7D,EAAI8C,OAAOP,cAC9B,IAAG,EAAKL,qBAAqB2B,EAAYF,EAAKlE,UAA9C,CACA,IAAMqE,EAAO,EAAKN,oBAAoBK,EAAYF,EAAKlE,UACvD,GAAKqE,EAEL,GAAG,EAAK7E,MAAM8E,SAASD,GACrB,EAAK1B,YAAL,eAAyBuB,EAAKlE,SAA9B,aAA2CqE,EAA3C,qCADF,CAMA,IADA,IAAIE,EAAW,KACf,MAA8BX,OAAOC,QAAQ,EAAKrE,MAAM8E,UAAxD,eAAmE,CAAC,IAAD,sBAAxDD,EAAwD,KACjE,GADiE,KACrDrE,WAAakE,EAAKlE,SAAS,CACrCuE,EAAWF,EACX,OAIDE,EACE,EAAK/E,MAAM5B,UAAYsG,EAAKlE,SAC7B,EAAK2C,YAAL,eAAyBuB,EAAKlE,SAA9B,aAA2CqE,EAA3C,0IAEA,EAAK7E,MAAMc,SAASiE,GACpB,EAAK5B,YAAL,eAAyBuB,EAAKlE,SAA9B,sCAAoEuE,EAApE,mCAAuGF,EAAvG,OAGF,EAAK1B,YAAL,eAAyBuB,EAAKlE,SAA9B,aAA2CqE,EAA3C,0CAGF,EAAK7E,MAAMgF,eAAeH,EAAMH,EAAKlE,iBA7CnC,GAAG,EAAKR,MAAMwD,eAAiB,EAAKxD,MAAMwD,cAAcyB,OAAS,EAAG,CAClE,IAAIC,EAAW,EAAKlF,MAAMwD,cAAc,GAAGC,SAC3C,GAAG,EAAKzD,MAAMwD,cAAcyB,OAAS,EAAG,CACtCC,GAAQ,wBAAqB,EAAKlF,MAAMwD,cAAc,GAAGC,UACzD,IAAI,IAAI0B,EAAI,EAAGA,EAAI,EAAKnF,MAAMwD,cAAcyB,OAAQE,IAClDD,GAAQ,eAAY,EAAKlF,MAAMwD,cAAc2B,GAAG1B,UAGpD,EAAKN,YAAL,eAAyBuB,EAAKlE,SAA9B,iCAA+D0E,EAA/D,WAEA,EAAK/B,YAAL,eAAyBuB,EAAKlE,SAA9B,4EA7Ha,EAmKnB2C,YAAc,SAACpC,GACb,EAAKJ,MAAMyE,OAAOC,IAAI,EAAKrF,MAAM5B,QAAS2C,IAlK1C,EAAKJ,MAAQ,CACXyE,OAAQ,KACRlB,WAAY,IAJG,E,qDAQnB,SAAkBlE,GAAQ,IAAD,OACjBoF,EAAS,IAAItC,EAAIsC,OAAO,CAC5BE,SAAU,CACR9E,SAAUd,KAAKM,MAAM5B,QACrBmH,SAAU7F,KAAKM,MAAMwF,cAEvBC,SAAU,CACR/F,KAAKM,MAAM5B,WAIfgH,EAAOM,GAAG,UAAWhG,KAAK8E,WAC1BY,EAAOO,UAEP3H,EAAM4H,GACH9G,MAAK,SAAAC,GAAC,OAAIA,EAAE8G,UACZ/G,MAAK,SAAA+G,GACJ,EAAKnF,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEEyE,SACAlB,WAAY4B,IAAKC,MAAMF,a,oBA0IjC,WACE,OAAO,S,GAzKiChD,aCNvBmD,E,kDACnB,WAAYhG,GAAO,IAAD,8BAChB,cAAMA,IAMRiG,UAAY,SAACC,GACX,OAAGA,IAAQ,EAAKlG,MAAMmG,YACZ,mBAAGrE,MAAO,CAACsE,MAAM,cAAjB,SAAiC,EAAKpG,MAAMqG,QAAQH,GAAKzC,WAE1D,EAAKzD,MAAMqG,QAAQH,GAAKzC,UATjC,EAAK9C,MAAQ,CACX2F,MAAO,GAHO,E,0CAelB,WAAU,IAAD,OACP,OACE,sBAAKxE,MAAO,CAACyE,WAAY,OAAQ/D,MAAO,MAAOgE,cAAe,cAA9D,UACE,qBAAK1E,MAAO,CAAC2E,gBAAiB,gBAAiBC,aAAc,MAAOC,UAAW,EAAG3E,QAAS,MAAO4E,aAAc,QAAhH,SACE,oBAAG9E,MAAO,CAACG,SAAU,OAAQ4E,WAAY,MAAOC,OAAQ,OAAQ9E,QAAS,OAAzE,sBACGtC,KAAKM,MAAMqG,QAAQpB,OAASvF,KAAKM,MAAMmG,YACnC,4BAAIzG,KAAKM,MAAMqG,QAAQ3G,KAAKM,MAAMmG,aAAa1C,WAC/C,qDAIT,sBAAK3B,MAAO,CAACI,QAAS,OAAQC,eAAgB,iBAA9C,UACE,wBAAQQ,QAASjD,KAAKM,MAAM+G,iBAAkBjF,MAAO,CAAC2E,gBAAiB,WAAYC,aAAc,MAAOC,UAAW,EAAGnE,MAAO,MAAOoE,aAAc,OAAQI,YAAa,OAAvK,sBACA,wBAAQrE,QAASjD,KAAKM,MAAMiH,gBAAiBnF,MAAO,CAAC2E,gBAAiB,WAAYC,aAAc,MAAOC,UAAW,EAAGnE,MAAO,MAAOoE,aAAc,OAAQL,WAAY,OAArK,yBAGF,sBAAKzE,MAAO,CAAC2E,gBAAiB,gBAAiBC,aAAc,MAAOC,UAAW,EAAG3E,QAAS,OAA3F,UACE,mBAAGF,MAAO,CAACG,SAAU,OAAQ4E,WAAY,OAAzC,uBACA,oBAAG/E,MAAO,CAACG,SAAU,QAArB,UACGvC,KAAKM,MAAMqG,QAAQa,KAAI,SAACC,EAAYhC,GAAb,OAAmB,6BAAa,EAAKc,UAAUd,IAAnBA,MACrB,IAA9BzF,KAAKM,MAAMqG,QAAQpB,QAAgB,6CAAQ,kB,GApCnBpC,aCI/BuE,EAAcnJ,EAAQ,IAGPoJ,E,kDACnB,WAAYrH,GAAO,IAAD,8BAChB,cAAMA,IAWRiH,gBAAkB,WAChB,OAAG,EAAKtG,MAAMwF,cAAgB,EAAKxF,MAAM0F,QAAQpB,SACjD,EAAKvE,UAAS,SAACC,GACb,OAAO,2BACF,EAAKA,OADV,IAEEwF,YAAaxF,EAAMwF,YAAY,QAG5B,IApBS,EAuBlBY,iBAAmB,WACd,EAAKpG,MAAMwF,aAAe,GAC7B,EAAKzF,UAAS,SAACC,GACb,OAAO,2BACF,EAAKA,OADV,IAEEwF,YAAaxF,EAAMwF,YAAY,QA5BnB,EAiClBnB,eAAkB,SAACH,EAAMvG,GACvB,EAAKoC,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEEmE,SAAS,2BACJ,EAAKnE,MAAMmE,UADR,kBAELD,EAAO,CACNrE,SAAUlC,EACVsC,KAAMpC,KAAKC,MACX2C,QAAQ,EACRE,QAAQ,KAGZgG,QAAS,EAAK3G,MAAM2G,QAAU,QA9ClB,EAmDlBtG,WAAa,SAAC6D,GACZ,IAAM0C,EAAS,eAAO,EAAK5G,MAAMmE,SAASD,IAC1C0C,EAAUnG,QAAUmG,EAAUnG,OAE9B,EAAKV,UAAS,WACZ,OAAO,2BACF,EAAKC,OADV,IAEEmE,SAAS,2BACJ,EAAKnE,MAAMmE,UADR,kBAELD,EAAO0C,UA5DE,EAoElBvD,YAAc,SAACP,GAKb,IAJA,IAAIyC,EAAM,EAAKvF,MAAMwF,YAIfD,EAAM,EAAKvF,MAAM0F,QAAQpB,SAAzB,UAAmC,EAAKtE,MAAM0F,QAAQH,UAAtD,aAAmC,EAAyBsB,WAAU,CAAC,IAAD,EAC1EtB,IAiBF,OAdA,EAAKxF,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEE0F,QAAQ,GAAD,mBACF1F,EAAM0F,QAAQoB,MAAM,EAAG9I,KAAK+I,IAAI,EAAGxB,KADjC,CAEL,CACEzC,WACA+D,UAAU,IAJP,YAMF7G,EAAM0F,QAAQoB,MAAMvB,UAKtBA,EAAM,EAAKvF,MAAMwF,aA3FR,EA8FlBwB,eAAiB,SAAClE,GAEhB,EAAK/C,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEE0F,QAAQ,GAAD,mBACF,EAAK1F,MAAM0F,SADT,CAEL,CACE5C,WACA+D,UAAU,KAGd1C,SAAS,2BACJnE,EAAMmE,UADH,kBAELrB,EAFK,2BAGD9C,EAAMmE,SAASrB,IAHd,IAIJnC,QAAQ,YA9GA,EAqHlBsG,YAAc,SAAC/C,GACb,GAA+C,IAA5CT,OAAOyD,KAAK,EAAKlH,MAAMmE,UAAUG,OAApC,CAGA,IAAM6C,EAAY,EAAKnH,MAAMmE,SAASD,GAAMrE,SAC5C,EAAKuH,aAAapI,iBAAiBmI,GAAWhJ,MAAK,SAACkJ,GAClD,IAAIjH,EAAM,GACV,OAAOiH,GACL,KAAK9J,EACH6C,EAAG,UAAM8D,EAAN,yDAA2DiD,EAA3D,sDACH,MAEF,KAAK5J,EACH6C,EAAG,WAAO+G,EAAP,yBAAiCjD,EAAjC,uBACH,MAEF,KAAK3G,EACL,QACE6C,GAAG,WAAQ+G,EAAR,yBAAkCjD,EAAlC,qDAEL,EAAKoD,eAAe9E,YAAYpC,MAGpC,EAAK4G,eAAe9C,GAGhB,EAAKlE,MAAMmE,SAASD,GAAMzD,QAC5B8G,YAAW,WACT,EAAKC,WAAWtD,GAAM,KACrB,QAlJW,EAsJlBsD,WAAa,SAACtD,GACZ,IAAMuD,EAAa,eAAO,EAAKzH,MAAMmE,iBAC9BsD,EAAcvD,GACrB,EAAKnE,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEEmE,SAAUsD,EACVd,QAAS,EAAK3G,MAAM2G,QAAU,QA7JlB,EAkKlB9C,UAAY,SAACtB,EAAS5E,EAAMiC,GAC1B,EAAKwH,aAAa1J,sBAAsBC,IAjKxC,EAAKyJ,aAAe,IAAI5J,EAAa,EAAK6B,MAAM5B,SAChD,EAAKuC,MAAQ,CACXmE,SAAU,GACVuD,OAAQjB,EAAY,CAACkB,MAAO,GAAIC,WAAY,QAASC,IAAK,SAC1DlB,QAAS,EACTjB,QAAS,GACTF,YAAa,GARC,E,0CAsKlB,WAAU,IAEJsC,EAFG,OACDC,EAAYtE,OAAOyD,KAAKnI,KAAKiB,MAAMmE,UAMzC,MAJmC,oBAAxBpF,KAAKM,MAAM2I,WAClBF,EAAa,wBAAQ3G,MAAO,CAAC8G,SAAU,WAAYC,IAAK,EAAGC,MAAO,EAAGrC,gBAAiB,WAAYC,aAAc,MAAOC,UAAW,EAAGoC,cAAe,MAAOC,WAAY,MAAO5C,MAAO,QAASzD,QAASjD,KAAKM,MAAM2I,SAArM,4BAIf,sBAAK7G,MAAO,CAACI,QAAS,QAAtB,UACE,cAAC,EAAD,CACE8C,eAAgBtF,KAAKsF,eACrBhB,YAAatE,KAAKsE,YAClBT,gBAAiB7D,KAAKuH,gBACtBnC,SAAUpF,KAAKiB,MAAMmE,SACrB1G,QAASsB,KAAKM,MAAM5B,QACpBiF,QAAS3D,KAAKM,MAAMqD,QACpBmC,aAAc9F,KAAKM,MAAMwF,aACzBhB,UAAW9E,KAAK8E,UAChB1D,SAAUpB,KAAKyI,WACf3E,cAAe9D,KAAKiB,MAAM0F,QAAQoB,MAAM/H,KAAKiB,MAAMwF,aACnD8C,IAAK,SAACC,GAAD,OAAQ,EAAKjB,eAAiBiB,KAErC,sBAAK1G,MAAM,OAAX,UACE,oBAAIV,MAAO,CAAC8E,aAAa,KAAzB,2BACA,qBAAI9E,MAAO,CAACG,SAAS,OAAQmE,MAAO,SAAUO,UAAW,MAAOC,aAAa,OAAQC,WAAY,KAAjG,mDAA8InH,KAAKM,MAAM5B,QAAzJ,oBACA,sBAAK0D,MAAO,CAACI,QAAQ,OAAQE,WAAY,aAAc0E,OAAO,QAA9D,UACA,cAAC,EAAD,CACET,QAAS3G,KAAKiB,MAAM0F,QACpBF,YAAazG,KAAKiB,MAAMwF,YACxBc,gBAAiBvH,KAAKuH,gBACtBF,iBAAkBrH,KAAKqH,mBAEzB,qBAAKjF,MAAO,CAACqH,SAAU,IAAK5C,WAAY,QAAxC,SACKmC,EAAUxB,KAAI,SAACnG,EAAKoE,GAAN,OACb,cAAC,EAAD,CAEEpE,IAAKA,EACLR,SAAU,EAAKI,MAAMmE,SAAS/D,GAC9BD,SAAU,EAAKqH,WACfnH,WAAY,EAAKA,WAAWpB,KAAKmB,GACjCT,YAAa,EAAKyH,aAAapI,kBAL1BwF,cAUf,qBAAK3C,MAAM,OAAOV,MAAO,CAAC0E,cAAe,cAAzC,SACE,qBAAK1E,MAAO,CAACG,SAAU,OAAQmH,SAAU,SAAU5G,MAAO,SAA1D,SACE,cAAC,IAAD,CAEE6G,SAAUX,EACVY,UAAW5J,KAAKiB,MAAM0H,OACtBkB,WAAY7J,KAAKkI,YACjB4B,YAAY,EACZC,KAAM,IACNC,WAAY,IACZC,aAAc,IACdC,aAAc,QACdC,cAAe,SATVnK,KAAKiB,MAAM2G,aAcrBmB,S,GArO+B5F,aCLlC7E,G,MAAQC,EAAQ,KAEhB6L,EAAgB,SAAU9J,GAC9B,IAAM+J,EAAW3F,OAAOyD,KAAK7H,EAAMO,UACnC,OACE,sBAAKmB,UAAU,gBAAf,UACE,oBAAGA,UAAU,gBAAb,UAA8B1B,EAAMiE,cAApC,OACC8F,EAAS7C,KAAI,SAACzD,EAAU0B,GAAX,OACZ,cAAC,EAAD,CAEE1B,SAAUA,EACVuG,gBAAiBhK,EAAMO,SAASkD,IAF3B0B,UAYT8E,EAAW,SAASjK,GACxB,OACE,gCACE,oBAAG0B,UAAU,WAAb,UAAyB1B,EAAMyD,SAA/B,OACCzD,EAAMgK,gBAAgB9C,KAAI,SAACgD,EAAe/E,GAAhB,OACzB,qBAAIzD,UAAU,oBAAd,sBAA4CwI,YAM/BC,E,kDACnB,WAAYnK,GAAQ,IAAD,8BACjB,cAAMA,IACDW,MAAQ,CACXuD,WAAY,IAHG,E,qDAOnB,SAAkBlE,GAAQ,IAAD,OACvBhC,EAAM4H,GACH9G,MAAK,SAAAC,GAAC,OAAIA,EAAE8G,UACZ/G,MAAK,SAAA+G,GACJ,EAAKnF,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEEuD,WAAY4B,IAAKC,MAAMF,a,oBAQ/B,WAAU,IAAD,OACDuE,EAAgBhG,OAAOyD,KAAKnI,KAAKiB,MAAMuD,YAC7C,OACE,qBAAKxC,UAAU,gBAAf,SACG0I,EAAclD,KAAI,SAACjD,EAAekB,GAAhB,OACjB,cAAC,EAAD,CAEElB,cAAeA,EACf1D,SAAU,EAAKI,MAAMuD,WAAWD,IAF3BkB,Y,GA7B0BtC,a,wBC9BvC7E,EAAQC,EAAQ,IAEhBoM,E,kDACJ,aAAc,IAAD,8BACX,gBACK1J,MAAQ,CACXH,SAAU8J,aAAaC,QAAQ,cAC/B/E,aAAc8E,aAAaC,QAAQ,kBACnCC,cAAc,GAEhB,EAAKC,QAAU,EAAKA,QAAQ7K,KAAb,gBACf,EAAK8K,OAAS,EAAKA,OAAO9K,KAAZ,gBARH,E,qDAUb,WAAqB,IAAD,OAChB,IAAKF,KAAKiB,MAAM6E,aACZ,OAAO9F,KAAK+K,UAEhBzM,EAAM,oCAAqC,CACzC2M,QAAS,CACP,YAAavH,iCACbwH,cAAc,UAAD,OAAYlL,KAAKiB,MAAM6E,iBAGvC1G,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAA+L,GAIJ,OADAP,aAAaQ,QAAQ,aAAcD,EAASE,KAAK,GAAGC,OAC7ChN,EAAM,oEAAD,OAAqE6M,EAASE,KAAK,GAAGtJ,IAAM,CACtGkJ,QAAS,CACP,YAAavH,iCACbwH,cAAc,UAAD,OAAY,EAAKjK,MAAM6E,iBAGvC1G,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAmM,GACJ,IAAM5H,EAAU4H,EAAQF,KAAK7D,KAAI,SAACgE,GAAD,OAAYA,EAAOC,UAAU7H,iBAC9D,EAAK5C,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEEH,SAAUqK,EAASE,KAAK,GAAGC,MAC3B3H,qBAKP7D,OAAM,SAAAC,GAAC,OAAI,EAAKgL,a,oBAGrB,WACIH,aAAac,WAAW,cACxBd,aAAac,WAAW,kBACxBpN,EAAM,sCAAwC,IAAIqN,gBAAgB,CAChEC,UAAWlI,iCACXmI,MAAO7L,KAAKiB,MAAM6E,aAClBgG,aAAcpI,uDACZ,CACFqI,OAAQ,OACRd,QAAS,CACPe,OAAQ,sCAGX5M,MAAK,WACF6M,OAAOC,SAASC,c,4DAIxB,WAAcpM,GAAd,sBAAAI,EAAA,6DACQJ,GACAqM,QAAQC,MAAMtM,GAElB6K,aAAac,WAAW,cACxBd,aAAac,WAAW,kBAEpBY,EAAcC,IAAYlG,MAAMrG,KAAKM,MAAM4L,SAASM,QAP5D,SAQQlO,EAAM,qCAAuC,IAAIqN,gBAAgB,CACrEc,WAAY,qBACZC,KAAMJ,EAAYI,KAClBd,UAAWlI,iCACXiJ,cAAejJ,iCACfoI,aAAcpI,uDACZ,CACFqI,OAAQ,OACRd,QAAS,CACPe,OAAQ,sCAET5M,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACdF,MAAK,SAACwN,GAEDA,EAAM9G,cAUV8E,aAAaQ,QAAQ,iBAAkBwB,EAAM9G,cAC7C,EAAK9E,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEE6E,aAAc8G,EAAM9G,kBAIxBxH,EAAM,oCAAqC,CACzC2M,QAAS,CACP,YAAavH,iCACbwH,cAAc,UAAD,OAAY0B,EAAM9G,iBAGlC1G,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAA+L,GAGJ,OADAP,aAAaQ,QAAQ,aAAcD,EAASE,KAAK,GAAGC,OAC7ChN,EAAM,oEAAD,OAAqE6M,EAASE,KAAK,GAAGtJ,IAAM,CACtGkJ,QAAS,CACP,YAAavH,iCACbwH,cAAc,UAAD,OAAY,EAAKjK,MAAM6E,iBAGvC1G,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAmM,GACJ,IAAM5H,EAAU4H,EAAQF,KAAK7D,KAAI,SAACgE,GAAD,OAAYA,EAAOC,UAAU7H,iBAC9D,EAAK5C,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEEH,SAAUqK,EAASE,KAAK,GAAGC,MAC3B3H,sBAxCN,EAAK3C,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEE6J,cAAc,UA1BxB,gD,2EAuEA,WACE,OACE,gCACoC,cAAjC9K,KAAKM,MAAM4L,SAASW,UAA4B,cAAC,EAAD,IAChD7M,KAAKiB,MAAM6J,cAAiD,cAAjC9K,KAAKM,MAAM4L,SAASW,SAC5C,cAAC,IAAD,CAAUC,GAAG,WACb9M,KAAKiB,MAAMH,UAAY,cAAC,EAAD,CACGpC,QAASsB,KAAKiB,MAAMH,SACpB6C,QAAS3D,KAAKiB,MAAM0C,QACpBmC,aAAc9F,KAAKiB,MAAM6E,aACzBmD,SAAUjJ,KAAKgL,gB,GAlJtB7H,aA0JhB4J,cAAWpC,GC3JpBqC,EAAc,WAClB,IACMC,EAAQ,0DAAsDvJ,iCAAtD,qCADC,sCACD,yBAAgJA,wDAC9J,OACE,mBAAGwJ,KAAMD,EAAU7K,MAAO,CAAC2E,gBAAiB,gBAAiBC,aAAc,MAAO1E,QAAS,OAAQoE,MAAO,SAA1G,iCAuBWyG,E,4JAlBb,WAEE,OACE,cAAC,IAAD,CAAYC,SAAS,IAArB,SACE,qBAAKpL,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,cAAC,IAAD,CAAOqL,OAAK,EAACC,KAAK,SAAlB,SACGN,MAEH,cAAC,IAAD,CAAOM,KAAK,IAAIC,UAAW5C,IAC3B,cAAC,IAAD,CAAO2C,KAAK,YAAYC,UAAW9C,e,GAX7BtH,aCHHqK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtO,MAAK,YAAkD,IAA/CuO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c27d87d1.chunk.js","sourcesContent":["const fetch = require('node-fetch');\n\nexport const ActivityStatus = {\n  ACTIVE: 1,\n  IDLE: 2,\n  DISCONNECTED: 3\n};\n\nconst MAX_IDLE_TIME_MINUTES = 10;\n\nexport default class ChatActivity {\n  constructor(channel) {\n    this.channel = channel;\n    this.lastMessageTimes = {};\n    this.getStatusPromise = this.getStatusPromise.bind(this);\n  }\n\n  updateLastMessageTime = (user) => {\n    this.lastMessageTimes = {\n      ...this.lastMessageTimes,\n      [user]: Date.now()\n    };\n  }\n\n  minsSinceLastChatMessage = (user) => {\n    return Math.floor((Date.now()-this.lastMessageTimes[user])/60000);\n  }\n\n  // returns a PROMISE, don't just assign the value again like a dweeb. :/\n  //\n  // not just active chatters - anyone with an active connnection to twitch chat.\n  // (thank the lord almighty for free open proxy sites. CORB is annoying.)\n  // note that results are fairly heavily cached, and the API may break\n  // eventually (is undocumented), but this is what twitch themselves\n  // uses to display the list of people connected to chat - best we got.\n  getChatters = () => {\n    return fetch(`https://thingproxy.freeboard.io/fetch/https://tmi.twitch.tv/group/user/${this.channel}/chatters`)\n      .then(r => r.json())\n      .then(res => {\n        if(!res || !res.chatters) return null;\n        return [\n          ...res.chatters.moderators,\n          ...res.chatters.viewers,\n          ...res.chatters.staff,\n          ...res.chatters.admins,\n          ...res.chatters.global_mods\n        ];\n      })\n      .catch((e) => {\n        // don't normally like swallowing errors like this,\n        // but it's a noncritical feature built off an\n        // undocumented api, sooo....\n        return null;\n      })\n  }\n\n  async getStatusPromise(user) {\n    // broadcaster always counts as active\n    if(user === this.channel) {\n      return ActivityStatus.ACTIVE;\n    }\n\n    // sent a chat message in the last X mins?\n    if(this.lastMessageTimes[user] && this.minsSinceLastChatMessage(user) < MAX_IDLE_TIME_MINUTES) {\n      return ActivityStatus.ACTIVE;\n    }\n\n    return this.getChatters().then((chatters) =>\n      !chatters || !chatters.includes(user)\n          ? ActivityStatus.DISCONNECTED\n          : ActivityStatus.IDLE\n    );\n  }\n\n}\n","export default __webpack_public_path__ + \"static/media/lock.6857c469.svg\";","import { Component } from 'react';\nimport ReactTooltip from 'react-tooltip'\nimport { ActivityStatus } from './ChatActivity';\nimport './messageStyles.css';\nimport lock from './lock.svg';\n\nexport default class GameRequest extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      timeDiff: 0,\n      activityStatus: null\n    };\n  }\n\n  getFormattedTimeDiff = (timestamp) => {\n    let unit = \"minute\";\n    let timeDiff = Math.floor((Date.now()-timestamp)/60000);\n    if(timeDiff === 0) {\n      return \"just now\";\n    }\n    if(timeDiff >= 60) {\n      unit = \"hour\";\n      timeDiff = Math.floor(timeDiff/60);\n\n      if(timeDiff >= 24) {\n        unit = \"day\";\n        timeDiff = Math.floor(timeDiff/24);\n      }\n    }\n    return `${timeDiff} ${unit}${timeDiff === 1 ? \"\" : \"s\"} ago`;\n  }\n\n  updateStatus = () => {\n    // return Date.now();\n    this.props.getActivity(this.props.metadata.username).then((activityStatus) => {\n      this.setState(() => {\n        return {\n          ...this.state,\n          timeDiff: this.getFormattedTimeDiff(this.props.metadata.time),\n          activityStatus\n        };\n      });\n    })\n  }\n  delete = (e) => {\n    this.props.onDelete(this.props.msg)\n  }\n\n  toggleLock = () => {\n    this.props.toggleLock(this.props.msg)\n  }\n\n  getTooltipContents = () => {\n    let statusClass = \"\";\n    switch(this.state.activityStatus) {\n      case ActivityStatus.ACTIVE:\n        statusClass = \"active\";\n        break;\n      case ActivityStatus.IDLE:\n        statusClass = \"idle\";\n        break;\n      case ActivityStatus.DISCONNECTED:\n        statusClass = \"disconnected\";\n        break;\n      default:\n        // no data back yet; don't show an activity status indicator at all\n        break;\n    }\n\n    return (`\n      <div class=\"tooltip\">\n        <p class=\"tooltipText\">Requested ${this.state.timeDiff} by ${this.props.metadata.username}</p>\n        <div class=\"status ${statusClass}\" />\n      </div>`);\n  }\n\n  render() {\n    const lockOpacity = this.props.metadata.locked ? '1' : '0.2';\n    const cardStatus = this.props.metadata.chosen ? 'chosen' : 'pending';\n    return (\n      <div>\n      <ReactTooltip effect=\"solid\" place=\"right\"/>\n      <div\n        id=\"baseDiv\"\n        className={cardStatus}\n        data-tip={this.getTooltipContents()}\n        data-html={true}\n        onMouseEnter={this.updateStatus}\n      >\n      <div style={{margin: '0px 15px 7px', padding: '4px', fontSize: '16px', display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\n        {this.props.msg}\n        <div style={{display:'flex'}}>\n          <img src={lock} alt=\"lock\" style={{width: '16px', opacity: lockOpacity, paddingRight: '8px'}} className=\"lock\" onClick={this.toggleLock} />\n          <button type='button' className=\"deleteButton\" onClick={this.delete}>X</button>\n        </div>\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/JackboxGames.8d41a84b.yaml\";","import { Component } from 'react';\r\nimport YAML from 'yaml'\r\nimport rawJackboxGameList from './JackboxGames.yaml';\r\nconst fetch = require('node-fetch');\r\nconst tmi = require('tmi.js');\r\n\r\nconst GAME_REQUEST_COMMAND = \"!request\";\r\n\r\nexport default class MessageHandler extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client: null,\r\n      validGames: []\r\n    };\r\n  }\r\n\r\n  componentDidMount(props) {\r\n    const client = new tmi.client({\r\n      identity: {\r\n        username: this.props.channel,\r\n        password: this.props.access_token\r\n      },\r\n      channels: [\r\n        this.props.channel\r\n      ]\r\n    });\r\n\r\n    client.on('message', this.onMessage);\r\n    client.connect();\r\n\r\n    fetch(rawJackboxGameList)\r\n      .then(r => r.text())\r\n      .then(text => {\r\n        this.setState((state) => {\r\n          return {\r\n            ...state,\r\n            client,\r\n            validGames: YAML.parse(text)\r\n          };\r\n        });\r\n      })\r\n    }\r\n\r\n  // returns true iff a known command was found & responded to\r\n  checkForMiscCommands = (message, username) => {\r\n    //========= game list =========\r\n    if(message === \"!gamelist\" || message === \"!gameslist\") {\r\n      this.sendMessage(`/me @${username}, click here for a list of valid Jackbox games: ${process.env.REACT_APP_REDIRECT_URI_NOENCODE}/gamelist`);\r\n      return true;\r\n    }\r\n\r\n    //========= advance next game =========\r\n    if(message === \"!advancenextgame\") {\r\n      if(this.props.channel !== username && !this.props.modList.includes(username.toLowerCase())){\r\n        this.sendMessage(`/me @${username}, only channel moderators can use the !advanceNextGame command.`);\r\n        return true;\r\n      }\r\n      if(this.props.advanceNextGame()) {\r\n        this.sendMessage(`/me @${username}, the next game has been advanced to ${this.props.upcomingGames[0].gameName}.`);\r\n      } else {\r\n        this.sendMessage(`/me @${username}, there are no more games in the queue to advance to!`);\r\n      }\r\n      return true;\r\n    }\r\n\r\n    //========= set next game =========\r\n    if(message.startsWith(\"!setnextgame\") || message.startsWith(\"!redeem\")) {\r\n      if(this.props.channel !== username && !this.props.modList.includes(username.toLowerCase())){\r\n        this.sendMessage(`/me @${username}, only channel moderators can use the ${message.startsWith(\"!s\") ? \"!setNextGame\" : \"!redeem\"} command.`);\r\n        return true;\r\n      }\r\n\r\n      const requestedGame = message.replace(\"!setnextgame\", \"\").replace(\"!redeem\", \"\").trim();\r\n      if(requestedGame === \"\") {\r\n        this.sendMessage(`/me @${username}, please specify the game you would like to insert in the queue: for example, ${message.startsWith(\"!s\") ? \"!setNextGame\" : \"!redeem\"} TMP 2`);\r\n        return true;\r\n      }\r\n\r\n      const gameName = this.matchGameName(requestedGame);\r\n      if(gameName) {\r\n        const numGamesAhead = this.props.setNextGame(gameName);\r\n        if(numGamesAhead === 0) {\r\n          this.sendMessage(`/me @${username}, ${gameName} has been inserted as the next game in the queue.`);\r\n        } else {\r\n          this.sendMessage(`/me @${username}, ${gameName} has been inserted in the queue following ${numGamesAhead} other manual game request${numGamesAhead > 1 ? 's' : ''}.`);\r\n        }\r\n\r\n      }\r\n      return true;\r\n    }\r\n  }\r\n\r\n  matchGameName = (requestedGame, username) => {\r\n    for(let partyPackName in this.state.validGames) {\r\n      const partyPack = this.state.validGames[partyPackName]\r\n      for(const [formalGameName, possibleMatches] of Object.entries(partyPack)){\r\n        if(possibleMatches.includes(requestedGame)) {\r\n          return `${formalGameName} (${partyPackName})`;\r\n        }\r\n      }\r\n    }\r\n    this.sendMessage(`/me @${username}, ${requestedGame} could not be found in the list of valid Jackbox games. Click here for a list of valid games: ${process.env.REACT_APP_REDIRECT_URI_NOENCODE}/gamelist`);\r\n    return null;\r\n  }\r\n\r\n  checkForGameCommand = (message, username) => {\r\n    if(!message.startsWith(GAME_REQUEST_COMMAND)) return;\r\n\r\n    const requestedGame = message.replace(GAME_REQUEST_COMMAND, \"\").trim();\r\n\r\n    if(requestedGame === \"\") {\r\n      this.sendMessage(`/me @${username}, please specify the game you would like to request: for example, !request TMP 2`);\r\n      return null;\r\n    }\r\n\r\n    return this.matchGameName(requestedGame, username);\r\n  }\r\n\r\n  onMessage = (target, tags, msg, self) => {\r\n    if(self) return;\r\n    this.props.onMessage(msg, tags.username, tags)\r\n\r\n    if(msg.trim() === \"!nextgame\") {\r\n      if(this.props.upcomingGames && this.props.upcomingGames.length > 0) {\r\n        let upcoming = this.props.upcomingGames[0].gameName;\r\n        if(this.props.upcomingGames.length > 1) {\r\n          upcoming += `, followed by ${this.props.upcomingGames[1].gameName}`\r\n          for(let i = 2; i < this.props.upcomingGames.length; i++) {\r\n            upcoming += ` and ${this.props.upcomingGames[i].gameName}`\r\n          }\r\n        }\r\n        this.sendMessage(`/me @${tags.username}, the next game up is ${upcoming}!`)\r\n      } else {\r\n        this.sendMessage(`/me @${tags.username}, the next game hasn't been decided yet - feel free to !request one :)`)\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    const cleanedMsg = msg.trim().toLowerCase();\r\n    if(this.checkForMiscCommands(cleanedMsg, tags.username)) return;\r\n    const game = this.checkForGameCommand(cleanedMsg, tags.username);\r\n    if (!game) return;\r\n\r\n    if(this.props.messages[game]) {\r\n      this.sendMessage(`/me @${tags.username}, ${game} has already been requested!`);\r\n      return;\r\n    }\r\n\r\n    let prevGame = null;\r\n    for(const [game, metadata] of Object.entries(this.props.messages)) {\r\n      if(metadata.username === tags.username){\r\n        prevGame = game;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(prevGame) {\r\n      if(this.props.channel === tags.username) {\r\n        this.sendMessage(`/me @${tags.username}, ${game} has been added to the request queue. Your previous game request(s) weren't deleted, since you have special broadcaster privilege :P`);\r\n      } else {\r\n        this.props.onDelete(prevGame);\r\n        this.sendMessage(`/me @${tags.username}, your previous request of ${prevGame} has been replaced with ${game}.`);\r\n      }\r\n    } else {\r\n      this.sendMessage(`/me @${tags.username}, ${game} has been added to the request queue.`);\r\n    }\r\n\r\n    this.props.addGameRequest(game, tags.username);\r\n  }\r\n\r\n  sendMessage = (msg) => {\r\n    this.state.client.say(this.props.channel, msg)\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n","import { Component } from 'react';\n\nexport default class Sidebar extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      index: 0\n    }\n  }\n\n  printGame = (idx) => {\n    if(idx === this.props.nextGameIdx) {\n      return (<b style={{color:'aquamarine'}}>{this.props.history[idx].gameName}</b>)\n    } else {\n      return this.props.history[idx].gameName\n    }\n  }\n\n  render() {\n    return (\n      <div style={{marginLeft: \"12px\", width: \"33%\", textTransform: 'capitalize'}}>\n        <div style={{backgroundColor: \"darkslategrey\", borderRadius: \"5px\", marginTop: 0, padding: '1px', marginBottom: '10px'}}>\n          <p style={{fontSize: \"14px\", fontWeight: \"700\", height: '70px', padding: '8px'}}> Up Next:\n            {this.props.history.length > this.props.nextGameIdx\n               ? <p>{this.props.history[this.props.nextGameIdx].gameName}</p>\n               : <p>not yet decided</p>}\n          </p>\n        </div>\n\n        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n          <button onClick={this.props.moveNextGameBack} style={{backgroundColor: \"darkcyan\", borderRadius: \"5px\", marginTop: 0, width: \"50%\", marginBottom: '20px', marginRight: '5px'}}> &#8678; </button>\n          <button onClick={this.props.moveNextGameFwd} style={{backgroundColor: \"darkcyan\", borderRadius: \"5px\", marginTop: 0, width: \"50%\", marginBottom: '20px', marginLeft: '5px'}}> &#8680; </button>\n        </div>\n\n        <div style={{backgroundColor: \"darkslategrey\", borderRadius: \"5px\", marginTop: 0, padding: '5px'}}>\n          <p style={{fontSize: \"14px\", fontWeight: \"700\"}}> History </p>\n          <p style={{fontSize: \"12px\"}}>\n            {this.props.history.map((playedGame, i) => <li key={i}>{this.printGame(i)}</li> )}\n            {this.props.history.length === 0 && <li key='0'>No games yet</li> }\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\n","import { Component } from 'react';\nimport WheelComponent from 'react-wheel-of-prizes'\nimport GameRequest from './GameRequest'\nimport MessageHandler from './MessageHandler';\nimport Sidebar from './Sidebar'\nimport ChatActivity, { ActivityStatus } from './ChatActivity';\nconst randomColor = require('randomcolor');\n\n\nexport default class MainScreen extends Component {\n  constructor(props){\n    super(props);\n    this.chatActivity = new ChatActivity(this.props.channel)\n    this.state = {\n      messages: {},\n      colors: randomColor({count: 99, luminosity: 'light', hue: 'blue'}),\n      counter: 0,\n      history: [],\n      nextGameIdx: 0\n    };\n  }\n\n  moveNextGameFwd = () => {\n    if(this.state.nextGameIdx === this.state.history.length) return false;\n    this.setState((state) => {\n      return {\n        ...this.state,\n        nextGameIdx: state.nextGameIdx+1\n      }\n    })\n    return true;\n  }\n\n  moveNextGameBack = () => {\n    if(this.state.nextGameIdx <= 0) return;\n    this.setState((state) => {\n      return {\n        ...this.state,\n        nextGameIdx: state.nextGameIdx-1\n      }\n    })\n  }\n\n  addGameRequest  = (game, user) => {\n    this.setState((state) => {\n      return {\n        ...state,\n        messages: {\n          ...this.state.messages,\n          [game]: {\n            username: user,\n            time: Date.now(),\n            locked: false,\n            chosen: false\n          }\n        },\n        counter: this.state.counter + 1\n      };\n    })\n  }\n\n  toggleLock = (game) => {\n    const stateCopy = {...this.state.messages[game]};\n    stateCopy.locked = !stateCopy.locked\n\n    this.setState(() => {\n      return {\n        ...this.state,\n        messages: {\n          ...this.state.messages,\n          [game]: stateCopy\n        }\n      }\n    });\n  }\n\n  // @return: the number of games ahead of this one, after successfully inserting in queue\n  // (i.e. if it's the very next game, return 0; if there's one ahead, return 1; etc)\n  setNextGame = (gameName) => {\n    let idx = this.state.nextGameIdx;\n\n    // insert next game at next up position by default, but\n    //    *after* any other manually inserted games\n    while(idx < this.state.history.length && this.state.history[idx]?.override) {\n      idx++;\n    }\n\n    this.setState((state) => {\n      return {\n        ...state,\n        history: [\n          ...state.history.slice(0, Math.max(0, idx)),\n          {\n            gameName,\n            override: true\n          },\n          ...state.history.slice(idx)\n        ]\n      }\n    })\n\n    return idx - this.state.nextGameIdx;\n  }\n\n  addGameToQueue = (gameName) => {\n    // update history + game card highlight color\n    this.setState((state) => {\n      return {\n        ...state,\n        history: [\n          ...this.state.history,\n          {\n            gameName,\n            override: false\n          }\n        ],\n        messages: {\n          ...state.messages,\n          [gameName]: {\n            ...state.messages[gameName],\n            chosen: true\n          }\n        }\n      }\n    })\n  }\n\n  onWheelSpun = (game) => {\n    if(Object.keys(this.state.messages).length === 0) return;\n\n    // send confirmation message in chat\n    const requester = this.state.messages[game].username;\n    this.chatActivity.getStatusPromise(requester).then((status) => {\n      let msg = \"\";\n      switch(status) {\n        case ActivityStatus.DISCONNECTED:\n          msg = `${game} just won the spin, but it doesn't seem like @${requester} is still around. Hope someone else wants to play!`\n          break;\n\n        case ActivityStatus.ACTIVE:\n          msg = `@${requester}, good news - ${game} just won the spin!`;\n          break;\n\n        case ActivityStatus.IDLE:\n        default:\n          msg += `@${requester}, good news - ${game} just won the spin! (I hope you're still around!)`;\n        }\n        this.messageHandler.sendMessage(msg);\n    })\n\n    this.addGameToQueue(game);\n\n    // remove card unless it's locked\n    if(!this.state.messages[game].locked) {\n      setTimeout(() => {\n        this.removeGame(game, true);\n      }, 2500);\n    }\n  }\n\n  removeGame = (game) => {\n    const newMessageObj = {...this.state.messages};\n    delete newMessageObj[game];\n    this.setState((state) => {\n      return {\n        ...state,\n        messages: newMessageObj,\n        counter: this.state.counter + 1\n      };\n    })\n  }\n\n  onMessage = (message, user, metadata) => {\n    this.chatActivity.updateLastMessageTime(user);\n  }\n\n  render() {\n    const gameArray = Object.keys(this.state.messages);\n    let logOutBtn;\n    if (typeof this.props.onLogout === 'function') {\n        logOutBtn = (<button style={{position: 'absolute', top: 0, right: 0, backgroundColor: 'darkcyan', borderRadius: '5px', marginTop: 0, paddingBottom: '5px', paddingTop: '5px', color: '#fff'}} onClick={this.props.onLogout}>Logout &#10151;</button>);\n    }\n\n    return (\n      <div style={{display: 'flex'}}>\n        <MessageHandler\n          addGameRequest={this.addGameRequest}\n          setNextGame={this.setNextGame}\n          advanceNextGame={this.moveNextGameFwd}\n          messages={this.state.messages}\n          channel={this.props.channel}\n          modList={this.props.modList}\n          access_token={this.props.access_token}\n          onMessage={this.onMessage}\n          onDelete={this.removeGame}\n          upcomingGames={this.state.history.slice(this.state.nextGameIdx)}\n          ref={(mh) => this.messageHandler = mh}\n        />\n        <div width=\"50vw\">\n          <h2 style={{marginBottom:\"0\"}}>Game Requests</h2>\n          <h4 style={{fontSize:\"20px\", color: \"yellow\", marginTop: \"6px\", marginBottom:\"12px\", fontWeight: 400}}>Type e.g. \"!request Blather Round\" in {this.props.channel}'s chat to add</h4>\n          <div style={{display:\"flex\", alignItems: \"flex-start\", height:\"100%\"}}>\n          <Sidebar\n            history={this.state.history}\n            nextGameIdx={this.state.nextGameIdx}\n            moveNextGameFwd={this.moveNextGameFwd}\n            moveNextGameBack={this.moveNextGameBack}\n          />\n          <div style={{flexGrow: \"2\", marginLeft: \"15px\"}}>\n              {gameArray.map((msg, i) =>\n                <GameRequest\n                  key={i}\n                  msg={msg}\n                  metadata={this.state.messages[msg]}\n                  onDelete={this.removeGame}\n                  toggleLock={this.toggleLock.bind(msg)}\n                  getActivity={this.chatActivity.getStatusPromise}\n              />)}\n            </div>\n          </div>\n        </div>\n        <div width=\"50vw\" style={{textTransform: 'capitalize'}}>\n          <div style={{fontSize: \"16px\", overflow: \"hidden\", width: \"600px\"}}>\n            <WheelComponent\n              key={this.state.counter}\n              segments={gameArray}\n              segColors={this.state.colors}\n              onFinished={this.onWheelSpun}\n              isOnlyOnce={false}\n              size={250}\n              upDuration={100}\n              downDuration={1000}\n              primaryColor={\"white\"}\n              contrastColor={\"black\"}\n            />\n          {/*  <Modal/>*/}\n          </div>\n        </div>\n        {logOutBtn}\n      </div>\n    )\n  }\n}\n","import { Component } from 'react';\nimport YAML from 'yaml'\nimport rawJackboxGameList from './JackboxGames.yaml';\nimport './JackboxGameList.css';\nconst fetch = require('node-fetch');\n\nconst PartyPackCard = function (props) {\n  const gameList = Object.keys(props.metadata);\n  return (\n    <div className=\"partyPackCard\">\n      <p className=\"partyPackName\">{props.partyPackName} </p>\n      {gameList.map((gameName, i) =>\n        <GameCard\n          key={i}\n          gameName={gameName}\n          possibleMatches={props.metadata[gameName]}\n        />\n      )}\n    </div>\n  );\n}\n\n\n// <p> {props.gameName} <p>\n\nconst GameCard = function(props) {\n  return (\n    <div>\n      <p className=\"gameName\">{props.gameName} </p>\n      {props.possibleMatches.map((possibleMatch, i) =>\n        <li className=\"possibleGameMatch\">!request {possibleMatch}</li>\n      )}\n    </div>\n  );\n}\n\nexport default class JackboxGameList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validGames: []\n    };\n  }\n\n  componentDidMount(props) {\n    fetch(rawJackboxGameList)\n      .then(r => r.text())\n      .then(text => {\n        this.setState((state) => {\n          return {\n            ...state,\n            validGames: YAML.parse(text)\n          };\n        });\n      })\n    }\n\n\n\n    render() {\n      const partyPackList = Object.keys(this.state.validGames);\n      return (\n        <div className=\"partyPackList\">\n          {partyPackList.map((partyPackName, i) =>\n            <PartyPackCard\n              key={i}\n              partyPackName={partyPackName}\n              metadata={this.state.validGames[partyPackName]}\n            />\n          )}\n        </div>\n      );\n    }\n\n}\n","\r\nimport React, { Component } from 'react';\r\nimport MainScreen from './MainScreen';\r\nimport JackboxGameList from './JackboxGameList';\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport queryString from 'query-string'\r\nconst fetch = require('node-fetch');\r\n\r\nclass AuthenticatedApp extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      username: localStorage.getItem('__username'),\r\n      access_token: localStorage.getItem('__access_token'),\r\n      failed_login: false\r\n    }\r\n    this.getAuth = this.getAuth.bind(this);\r\n    this.logOut = this.logOut.bind(this);\r\n  }\r\n  componentDidMount() {\r\n      if (!this.state.access_token) {\r\n          return this.getAuth();\r\n      }\r\n      fetch('https://api.twitch.tv/helix/users', {\r\n        headers: {\r\n          'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\r\n          Authorization: `Bearer ${this.state.access_token}`\r\n        }\r\n      })\r\n      .then(r => r.json())\r\n      .then(userInfo => {\r\n        //console.log(userInfo); //login [aka lowercase username?], display_name, profile_image_url, description\r\n\r\n        localStorage.setItem('__username', userInfo.data[0].login);\r\n        return fetch(`https://api.twitch.tv/helix/moderation/moderators?broadcaster_id=${userInfo.data[0].id}`, {\r\n          headers: {\r\n            'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\r\n            Authorization: `Bearer ${this.state.access_token}`\r\n          }\r\n        })\r\n        .then(r => r.json())\r\n        .then(modInfo => {\r\n          const modList = modInfo.data.map((modObj) => modObj.user_name.toLowerCase())\r\n          this.setState((state) => {\r\n            return {\r\n              ...state,\r\n              username: userInfo.data[0].login,\r\n              modList\r\n            };\r\n          })\r\n        })\r\n      })\r\n      .catch(e => this.getAuth)\r\n  }\r\n\r\n  logOut() {\r\n      localStorage.removeItem('__username');\r\n      localStorage.removeItem('__access_token');\r\n      fetch('https://id.twitch.tv/oauth2/revoke?' + new URLSearchParams({\r\n        client_id: process.env.REACT_APP_TWITCH_CLIENT_ID,\r\n        token: this.state.access_token,\r\n        redirect_uri: process.env.REACT_APP_REDIRECT_URI_NOENCODE\r\n      }), {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/vnd.twitchtv.v5+json'\r\n        }\r\n      })\r\n      .then(() => {\r\n          window.location.reload();\r\n      });\r\n  }\r\n\r\n  async getAuth(e) {\r\n      if (e) {\r\n          console.error(e);\r\n      }\r\n      localStorage.removeItem('__username');\r\n      localStorage.removeItem('__access_token');\r\n\r\n    const queryParams = queryString.parse(this.props.location.search);\r\n    await fetch('https://id.twitch.tv/oauth2/token?' + new URLSearchParams({\r\n      grant_type: 'authorization_code',\r\n      code: queryParams.code,\r\n      client_id: process.env.REACT_APP_TWITCH_CLIENT_ID,\r\n      client_secret: process.env.REACT_APP_TWITCH_CLIENT_SECRET,\r\n      redirect_uri: process.env.REACT_APP_REDIRECT_URI_NOENCODE\r\n    }), {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/vnd.twitchtv.v5+json'\r\n      }\r\n    }).then(r => r.json())\r\n    .then((oauth) => {\r\n      //console.log(oauth); // access_token, refresh_token, expires_in, scope ['...']\r\n      if(!oauth.access_token) {\r\n        this.setState((state) => {\r\n          return {\r\n            ...state,\r\n            failed_login: true\r\n          };\r\n        });\r\n        return;\r\n      }\r\n\r\n      localStorage.setItem('__access_token', oauth.access_token);\r\n      this.setState((state) => {\r\n        return {\r\n          ...state,\r\n          access_token: oauth.access_token\r\n        };\r\n      });\r\n\r\n      fetch('https://api.twitch.tv/helix/users', {\r\n        headers: {\r\n          'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\r\n          Authorization: `Bearer ${oauth.access_token}`\r\n        }\r\n      })\r\n      .then(r => r.json())\r\n      .then(userInfo => {\r\n        //console.log(userInfo); //login [aka lowercase username?], display_name, profile_image_url, description\r\n        localStorage.setItem('__username', userInfo.data[0].login);\r\n        return fetch(`https://api.twitch.tv/helix/moderation/moderators?broadcaster_id=${userInfo.data[0].id}`, {\r\n          headers: {\r\n            'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\r\n            Authorization: `Bearer ${this.state.access_token}`\r\n          }\r\n        })\r\n        .then(r => r.json())\r\n        .then(modInfo => {\r\n          const modList = modInfo.data.map((modObj) => modObj.user_name.toLowerCase())\r\n          this.setState((state) => {\r\n            return {\r\n              ...state,\r\n              username: userInfo.data[0].login,\r\n              modList\r\n            };\r\n          })\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.location.pathname === \"/gamelist\" && <JackboxGameList /> }\r\n        {this.state.failed_login && this.props.location.pathname !== \"/gamelist\"\r\n          ? <Redirect to=\"/login\" />\r\n          : this.state.username && <MainScreen\r\n                                      channel={this.state.username}\r\n                                      modList={this.state.modList}\r\n                                      access_token={this.state.access_token}\r\n                                      onLogout={this.logOut}\r\n                                    />}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(AuthenticatedApp);\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport AuthenticatedApp from './AuthenticatedApp';\nimport React, { Component } from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport JackboxGameList from './JackboxGameList';\n\nconst loginScreen = function() {\n  const scopes = \"chat:read chat:edit moderation:read\"\n  const loginUrl = `https://id.twitch.tv/oauth2/authorize?client_id=${process.env.REACT_APP_TWITCH_CLIENT_ID}&response_type=code&scope=${scopes}&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}`\n  return (\n    <a href={loginUrl} style={{backgroundColor: 'rebeccapurple', borderRadius: '5px', padding: '10px', color: 'white'}}>Log In With Twitch</a>\n  );\n}\n\nclass App extends Component {\n  render() {\n\n    return (\n      <HashRouter basename='/'>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Route exact path=\"/login\">\n              {loginScreen()}\n            </Route>\n            <Route path=\"/\" component={AuthenticatedApp} />\n            <Route path=\"/gamelist\" component={JackboxGameList} />\n          </header>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}