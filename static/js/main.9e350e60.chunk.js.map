{"version":3,"sources":["ChatActivity.js","lock.svg","GameRequest.js","JackboxGames.yaml","MessageHandler.js","Sidebar.js","MainScreen.js","AuthenticatedApp.js","JackboxGameList.js","App.js","reportWebVitals.js","index.js"],"names":["fetch","require","ActivityStatus","ChatActivity","channel","updateLastMessageTime","user","lastMessageTimes","Date","now","minsSinceLastChatMessage","Math","floor","getChatters","then","r","json","res","chatters","moderators","viewers","staff","admins","global_mods","catch","e","this","getStatus","bind","a","includes","GameRequest","props","updateStatus","getActivity","metadata","username","activityStatus","setState","state","timeDiff","time","delete","onDelete","msg","toggleLock","getTooltipContents","statusClass","lockOpacity","locked","effect","place","id","data-tip","data-html","style","backgroundColor","textAlign","borderRadius","textTransform","onMouseEnter","margin","padding","fontSize","display","justifyContent","alignItems","src","lock","alt","width","opacity","paddingRight","className","onClick","type","Component","tmi","GAME_REQUEST_COMMAND","MessageHandler","filterGameCommands","message","trim","sendMessage","process","startsWith","requestedGame","replace","toLowerCase","partyPackName","validGames","partyPack","Object","entries","formalGameName","onMessage","target","tags","self","game","messages","prevGame","addGame","client","say","identity","password","access_token","channels","on","connect","rawJackboxGameList","text","YAML","parse","Sidebar","goForward","index","history","length","goBackward","printGame","idx","color","marginLeft","marginTop","marginBottom","fontWeight","height","marginRight","map","playedGame","i","randomColor","MainScreen","counter","stateCopy","onGameChosen","keys","setTimeout","removeGame","newMessageObj","chatActivity","colors","count","luminosity","hue","gameArray","flexGrow","overflow","segments","segColors","onFinished","isOnlyOnce","size","upDuration","downDuration","primaryColor","contrastColor","AuthenticatedApp","failed_login","queryParams","queryString","location","search","URLSearchParams","grant_type","code","client_id","client_secret","redirect_uri","method","headers","Accept","oauth","Authorization","userInfo","data","login","pathname","to","withRouter","PartyPackCard","gameList","gameName","possibleMatches","GameCard","console","log","possibleMatch","JackboxGameList","partyPackList","loginScreen","loginUrl","href","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e350e60.chunk.js","sourcesContent":["const fetch = require('node-fetch');\n\nexport const ActivityStatus = {\n  ACTIVE: 1,\n  IDLE: 2,\n  DISCONNECTED: 3\n};\n\nconst MAX_IDLE_TIME_MINUTES = 10;\n\nexport default class ChatActivity {\n  constructor(channel) {\n    this.channel = channel;\n    this.lastMessageTimes = {};\n    this.getStatus = this.getStatus.bind(this);\n  }\n\n  updateLastMessageTime = (user) => {\n    this.lastMessageTimes = {\n      ...this.lastMessageTimes,\n      [user]: Date.now()\n    };\n  }\n\n  minsSinceLastChatMessage = (user) => {\n    return Math.floor((Date.now()-this.lastMessageTimes[user])/60000);\n  }\n\n  // returns a PROMISE, don't just assign the value again like a dweeb. :/\n  //\n  // not just active chatters - anyone with an active connnection to twitch chat.\n  // (thank the lord almighty for free open proxy sites. CORB is annoying.)\n  // note that results are fairly heavily cached, and the API may break\n  // eventually (is undocumented), but this is what twitch themselves\n  // uses to display the list of people connected to chat - best we got.\n  getChatters = () => {\n    return fetch(`https://thingproxy.freeboard.io/fetch/https://tmi.twitch.tv/group/user/${this.channel}/chatters`)\n      .then(r => r.json())\n      .then(res => {\n        if(!res || !res.chatters) return null;\n        return [\n          ...res.chatters.moderators,\n          ...res.chatters.viewers,\n          ...res.chatters.staff,\n          ...res.chatters.admins,\n          ...res.chatters.global_mods\n        ];\n      })\n      .catch((e) => {\n        // don't normally like swallowing errors like this,\n        // but it's a noncritical feature built off an\n        // undocumented api, sooo....\n        return null;\n      })\n  }\n\n  async getStatus(user) {\n    // broadcaster always counts as active\n    if(user === this.channel) {\n      return ActivityStatus.ACTIVE;\n    }\n\n    // sent a chat message in the last X mins?\n    if(this.lastMessageTimes[user] && this.minsSinceLastChatMessage(user) < MAX_IDLE_TIME_MINUTES) {\n      return ActivityStatus.ACTIVE;\n    }\n\n    return this.getChatters().then((chatters) =>\n      !chatters || !chatters.includes(user)\n          ? ActivityStatus.DISCONNECTED\n          : ActivityStatus.IDLE\n    );\n  }\n\n}\n","export default __webpack_public_path__ + \"static/media/lock.6857c469.svg\";","import { Component } from 'react';\nimport ReactTooltip from 'react-tooltip'\nimport { ActivityStatus } from './ChatActivity';\nimport './messageStyles.css';\nimport lock from './lock.svg';\n\nexport default class GameRequest extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      timeDiff: 0,\n      activityStatus: null\n    };\n  }\n\n  updateStatus = () => {\n    // return Date.now();\n    this.props.getActivity(this.props.metadata.username).then((activityStatus) => {\n      this.setState(() => {\n        return {\n          ...this.state,\n          timeDiff: `${Math.floor((Date.now()-this.props.metadata.time)/60000)} minutes ago`,\n          activityStatus\n        };\n      });\n    })\n  }\n  delete = (e) => {\n    this.props.onDelete(this.props.msg)\n  }\n\n  toggleLock = () => {\n    this.props.toggleLock(this.props.msg)\n  }\n\n  getTooltipContents = () => {\n    let statusClass = \"\";\n    switch(this.state.activityStatus) {\n      case ActivityStatus.ACTIVE:\n        statusClass = \"active\";\n        break;\n      case ActivityStatus.IDLE:\n        statusClass = \"idle\";\n        break;\n      case ActivityStatus.DISCONNECTED:\n        statusClass = \"disconnected\";\n        break;\n    }\n\n    return (`\n      <div class=\"tooltip\">\n        <p class=\"tooltipText\">Requested ${this.state.timeDiff} by ${this.props.metadata.username}</p>\n        <div class=\"status ${statusClass}\" />\n      </div>`);\n  }\n\n  render() {\n    const lockOpacity = this.props.metadata.locked ? '1' : '0.2';\n    return (\n      <div>\n      <ReactTooltip effect=\"solid\" place=\"right\"/>\n      <div\n        id=\"baseDiv\"\n        data-tip={this.getTooltipContents()}\n        data-html={true}\n        style={{\n          backgroundColor:'steelblue',\n          textAlign: 'left',\n          borderRadius: '8px',\n          textTransform: 'capitalize'\n        }}\n        onMouseEnter={this.updateStatus}\n      >\n      <div style={{margin: '0px 15px 7px', padding: '4px', fontSize: '16px', display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\n        {this.props.msg}\n        <div style={{display:'flex'}}>\n          <img src={lock} alt=\"lock\" style={{width: '16px', opacity: lockOpacity, paddingRight: '8px'}} className=\"lock\" onClick={this.toggleLock} />\n          <button type='button' className=\"deleteButton\" onClick={this.delete}>X</button>\n        </div>\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/JackboxGames.3e1fec84.yaml\";","import { Component } from 'react';\r\nimport YAML from 'yaml'\r\nimport rawJackboxGameList from './JackboxGames.yaml';\r\nconst fetch = require('node-fetch');\r\nconst tmi = require('tmi.js');\r\n\r\nconst GAME_REQUEST_COMMAND = \"!request\";\r\n\r\nexport default class MessageHandler extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client: null,\r\n      validGames: []\r\n    };\r\n  }\r\n\r\n  componentDidMount(props) {\r\n    const client = new tmi.client({\r\n      identity: {\r\n        username: this.props.channel,\r\n        password: this.props.access_token\r\n      },\r\n      channels: [\r\n        this.props.channel\r\n      ]\r\n    });\r\n\r\n    client.on('message', this.onMessage);\r\n    client.connect();\r\n\r\n    fetch(rawJackboxGameList)\r\n      .then(r => r.text())\r\n      .then(text => {\r\n        this.setState((state) => {\r\n          return {\r\n            ...state,\r\n            client,\r\n            validGames: YAML.parse(text)\r\n          };\r\n        });\r\n      })\r\n    }\r\n\r\n  filterGameCommands = (message, username) => {\r\n    if(message.trim() === \"!gamelist\") {\r\n      this.sendMessage(`/me @${username}, click here for a list of valid Jackbox games: ${process.env.REACT_APP_REDIRECT_URI_NOENCODE}/gamelist`);\r\n    }\r\n    if(!message.startsWith(GAME_REQUEST_COMMAND)) return;\r\n\r\n    const requestedGame = message.replace(GAME_REQUEST_COMMAND, \"\").trim().toLowerCase();\r\n\r\n    for(let partyPackName in this.state.validGames) {\r\n      const partyPack = this.state.validGames[partyPackName]\r\n      for(const [formalGameName, possibleMatches] of Object.entries(partyPack)){\r\n        if(possibleMatches.includes(requestedGame)) {\r\n          return `${formalGameName} (${partyPackName})`;\r\n        }\r\n      }\r\n    }\r\n    this.sendMessage(`/me @${username}, ${requestedGame} could not be found in the list of valid Jackbox games. Click here for a list of valid games: ${process.env.REACT_APP_REDIRECT_URI_NOENCODE}/gamelist`);\r\n    return null;\r\n  }\r\n\r\n  onMessage = (target, tags, msg, self) => {\r\n    if(self) return;\r\n    this.props.onMessage(msg, tags.username, tags)\r\n    const game = this.filterGameCommands(msg, tags.username);\r\n    if (!game) return;\r\n\r\n    if(this.props.messages[game]) {\r\n      this.sendMessage(`/me @${tags.username}, ${game} has already been requested!`);\r\n      return;\r\n    }\r\n\r\n    let prevGame = null;\r\n    for(const [game, metadata] of Object.entries(this.props.messages)) {\r\n      if(metadata.username === tags.username){\r\n        prevGame = game;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(prevGame) {\r\n      if(this.props.channel === tags.username) {\r\n        this.sendMessage(`/me @${tags.username}, ${game} has been added to the request queue. Your previous game request(s) weren't deleted, since you have special broadcaster privilege :P`);\r\n      } else {\r\n        this.props.onDelete(prevGame);\r\n        this.sendMessage(`/me @${tags.username}, your previous request of ${prevGame} has been replaced with ${game}.`);\r\n      }\r\n    } else {\r\n      this.sendMessage(`/me @${tags.username}, ${game} has been added to the request queue.`);\r\n    }\r\n\r\n    this.props.addGame(game, tags.username);\r\n  }\r\n\r\n  sendMessage = (msg) => {\r\n    this.state.client.say(this.props.channel, msg)\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n","import { Component } from 'react';\n\nexport default class Sidebar extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      index: 0\n    }\n  }\n\n  goForward = () => {\n    if(this.state.index === this.props.history.length-1) return;\n    this.setState((state) => {\n      return {\n        ...this.state,\n        index: this.state.index+1\n      }\n    })\n  }\n\n  goBackward = () => {\n    if(this.state.index <= 0) return;\n    this.setState((state) => {\n      return {\n        ...this.state,\n        index: this.state.index-1\n      }\n    })\n  }\n\n  printGame = (idx) => {\n    if(idx === this.state.index) {\n      return (<b style={{color:'aquamarine'}}>{this.props.history[idx]}</b>)\n    } else {\n      return this.props.history[idx]\n    }\n  }\n\n  render() {\n    return (\n      <div style={{marginLeft: \"12px\", width: \"33%\", textTransform: 'capitalize'}}>\n        <div style={{backgroundColor: \"darkslategrey\", borderRadius: \"5px\", marginTop: 0, padding: '1px', marginBottom: '10px'}}>\n          <p style={{fontSize: \"14px\", fontWeight: \"700\", height: '70px', padding: '8px'}}> Up Next:\n            {this.props.history.length > this.state.index && <p>{this.props.history[this.state.index]}</p> }\n          </p>\n        </div>\n\n        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n          <button onClick={this.goBackward} style={{backgroundColor: \"darkcyan\", borderRadius: \"5px\", marginTop: 0, width: \"50%\", marginBottom: '20px', marginRight: '5px'}}> 🢠 </button>\n          <button onClick={this.goForward} style={{backgroundColor: \"darkcyan\", borderRadius: \"5px\", marginTop: 0, width: \"50%\", marginBottom: '20px', marginLeft: '5px'}}> 🢡 </button>\n        </div>\n\n        <div style={{backgroundColor: \"darkslategrey\", borderRadius: \"5px\", marginTop: 0, padding: '5px'}}>\n          <p style={{fontSize: \"14px\", fontWeight: \"700\"}}> History </p>\n          <p style={{fontSize: \"12px\"}}>\n            {this.props.history.map((playedGame, i) => <li key={i}>{this.printGame(i)}</li> )}\n            {this.props.history.length === 0 && <li key='0'>No games yet</li> }\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\n","import { Component } from 'react';\nimport WheelComponent from 'react-wheel-of-prizes'\nimport GameRequest from './GameRequest'\nimport MessageHandler from './MessageHandler';\nimport Sidebar from './Sidebar'\nimport ChatActivity from './ChatActivity';\nconst randomColor = require('randomcolor');\n\nconst column = function(width) {\n  return (<div style={{float:'left', width:width}} />);\n}\n\nexport default class MainScreen extends Component {\n  constructor(props){\n    super(props);\n    this.chatActivity = new ChatActivity(this.props.channel)\n    this.state = {\n      messages: {},\n      colors: randomColor({count: 99, luminosity: 'light', hue: 'blue'}),\n      counter: 0,\n      history: []\n    };\n  }\n\n  addGame  = (game, user) => {\n    this.setState((state) => {\n      return {\n        ...state,\n        messages: {\n          ...this.state.messages,\n          [game]: {\n            username: user,\n            time: Date.now(),\n            locked: false\n          }\n        },\n        counter: this.state.counter + 1\n      };\n    })\n  }\n\n  toggleLock = (game) => {\n    const stateCopy = {...this.state.messages[game]};\n    stateCopy.locked = !stateCopy.locked\n\n    this.setState(() => {\n      return {\n        ...this.state,\n        messages: {\n          ...this.state.messages,\n          [game]: stateCopy\n        }\n      }\n    });\n  }\n\n  onGameChosen = (game) => {\n    if(Object.keys(this.state.messages).length === 0) return;\n    if(!this.state.messages[game].locked) {\n      setTimeout(() => {\n        this.removeGame(game, true);\n      }, 2500);\n    }\n    this.setState((state) => {\n      return {\n        ...state,\n        history: [\n          ...this.state.history,\n          game\n        ]\n      };\n    })\n  }\n\n  removeGame = (game) => {\n    const newMessageObj = {...this.state.messages};\n    delete newMessageObj[game];\n    this.setState((state) => {\n      return {\n        ...state,\n        messages: newMessageObj,\n        counter: this.state.counter + 1\n      };\n    })\n  }\n\n  onMessage = (message, user, metadata) => {\n    this.chatActivity.updateLastMessageTime(user);\n  }\n\n  render() {\n    const gameArray = Object.keys(this.state.messages);\n    return (\n      <div style={{display: 'flex'}}>\n        <MessageHandler\n          addGame={this.addGame}\n          messages={this.state.messages}\n          channel={this.props.channel}\n          access_token={this.props.access_token}\n          onMessage={this.onMessage}\n          onDelete={this.removeGame}\n        />\n        <column width=\"50vw\">\n          <h2 style={{marginBottom:\"0\"}}>Game Requests</h2>\n          <h4 style={{fontSize:\"20px\", color: \"yellow\", marginTop: \"6px\", marginBottom:\"12px\", fontWeight: 400}}>Type e.g. \"!request Blather Round\" in {this.props.channel}'s chat to add</h4>\n          <div style={{display:\"flex\", alignItems: \"flex-start\", height:\"100%\"}}>\n          <Sidebar history={this.state.history}/>\n          <div style={{flexGrow: \"2\", marginLeft: \"15px\"}}>\n              {gameArray.map((msg, i) =>\n                <GameRequest\n                  key={i}\n                  msg={msg}\n                  metadata={this.state.messages[msg]}\n                  onDelete={this.removeGame}\n                  toggleLock={this.toggleLock.bind(msg)}\n                  getActivity={this.chatActivity.getStatus}\n              />)}\n            </div>\n          </div>\n        </column>\n        <column width=\"50vw\" style={{textTransform: 'capitalize'}}>\n          <div style={{fontSize: \"16px\", overflow: \"hidden\", width: \"600px\"}}>\n            <WheelComponent\n              key={this.state.counter}\n              segments={gameArray}\n              segColors={this.state.colors}\n              onFinished={this.onGameChosen}\n              isOnlyOnce={false}\n              size={250}\n              upDuration={100}\n              downDuration={1000}\n              primaryColor={\"white\"}\n              contrastColor={\"black\"}\n            />\n          {/*  <Modal/>*/}\n          </div>\n        </column>\n      </div>\n    )\n  }\n}\n","\r\nimport React, { Component } from 'react';\r\nimport MainScreen from './MainScreen';\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport queryString from 'query-string'\r\nconst fetch = require('node-fetch');\r\n\r\nclass AuthenticatedApp extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      access_token: \"\",\r\n      failed_login: false\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    const queryParams = queryString.parse(this.props.location.search);\r\n    await fetch('https://id.twitch.tv/oauth2/token?' + new URLSearchParams({\r\n      grant_type: 'authorization_code',\r\n      code: queryParams.code,\r\n      client_id: process.env.REACT_APP_TWITCH_CLIENT_ID,\r\n      client_secret: process.env.REACT_APP_TWITCH_CLIENT_SECRET,\r\n      redirect_uri: process.env.REACT_APP_REDIRECT_URI_NOENCODE\r\n    }), {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/vnd.twitchtv.v5+json'\r\n      }\r\n    }).then(r => r.json())\r\n    .then((oauth) => {\r\n      //console.log(oauth); // access_token, refresh_token, expires_in, scope ['...']\r\n      if(!oauth.access_token) {\r\n        this.setState((state) => {\r\n          return {\r\n            ...state,\r\n            failed_login: true\r\n          };\r\n        });\r\n        return;\r\n      }\r\n\r\n      this.setState((state) => {\r\n        return {\r\n          ...state,\r\n          access_token: oauth.access_token\r\n        };\r\n      });\r\n\r\n      fetch('https://api.twitch.tv/helix/users', {\r\n        headers: {\r\n          'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\r\n          Authorization: `Bearer ${oauth.access_token}`\r\n        }\r\n      })\r\n      .then(r => r.json())\r\n      .then(userInfo => {\r\n        //console.log(userInfo); //login [aka lowercase username?], display_name, profile_image_url, description\r\n        this.setState((state) => {\r\n          return {\r\n            ...state,\r\n            username: userInfo.data[0].login,\r\n          };\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.failed_login && this.props.location.pathname !== \"/gamelist\"\r\n          ? <Redirect to=\"/login\" />\r\n          : this.state.username && <MainScreen channel={this.state.username} access_token={this.state.access_token} />}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(AuthenticatedApp);\r\n","import { Component } from 'react';\nimport YAML from 'yaml'\nimport rawJackboxGameList from './JackboxGames.yaml';\nimport './JackboxGameList.css';\nconst fetch = require('node-fetch');\n\nconst PartyPackCard = function (props) {\n  const gameList = Object.keys(props.metadata);\n  return (\n    <div className=\"partyPackCard\">\n      <p className=\"partyPackName\">{props.partyPackName} </p>\n      {gameList.map((gameName, i) =>\n        <GameCard\n          key={i}\n          gameName={gameName}\n          possibleMatches={props.metadata[gameName]}\n        />\n      )}\n    </div>\n  );\n}\n\n\n// <p> {props.gameName} <p>\n\nconst GameCard = function(props) {\n  console.log(props.possibleMatches);\n  return (\n    <div>\n      <p className=\"gameName\">{props.gameName} </p>\n      {props.possibleMatches.map((possibleMatch, i) =>\n        <li className=\"possibleGameMatch\">!request {possibleMatch}</li>\n      )}\n    </div>\n  );\n}\n\nexport default class JackboxGameList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validGames: []\n    };\n  }\n\n  componentDidMount(props) {\n    fetch(rawJackboxGameList)\n      .then(r => r.text())\n      .then(text => {\n        this.setState((state) => {\n          return {\n            ...state,\n            validGames: YAML.parse(text)\n          };\n        });\n      })\n    }\n\n\n\n    render() {\n      const partyPackList = Object.keys(this.state.validGames);\n      console.log(partyPackList);\n      return (\n        <div className=\"partyPackList\">\n          {partyPackList.map((partyPackName, i) =>\n            <PartyPackCard\n              key={i}\n              partyPackName={partyPackName}\n              metadata={this.state.validGames[partyPackName]}\n            />\n          )}\n        </div>\n      );\n    }\n\n}\n","// import logo from './logo.svg';\nimport './App.css';\nimport AuthenticatedApp from './AuthenticatedApp';\nimport React, { Component } from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport JackboxGameList from './JackboxGameList';\n\nconst loginScreen = function() {\n  const loginUrl = `https://id.twitch.tv/oauth2/authorize?client_id=${process.env.REACT_APP_TWITCH_CLIENT_ID}&response_type=code&scope=chat:read chat:edit&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}`\n  return (\n    <a href={loginUrl} style={{backgroundColor: 'rebeccapurple', borderRadius: '5px', padding: '10px', color: 'white'}}>Log In With Twitch</a>\n  );\n}\n\nclass App extends Component {\n  render() {\n\n    return (\n      <HashRouter basename='/'>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Route exact path=\"/login\">\n              {loginScreen()}\n            </Route>\n            <Route path=\"/\" component={AuthenticatedApp} />\n            <Route path=\"/gamelist\" component={JackboxGameList} />\n          </header>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}