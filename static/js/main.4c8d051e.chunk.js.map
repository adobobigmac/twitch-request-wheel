{"version":3,"sources":["ChatActivity.js","lock.svg","GameRequest.js","JackboxGames.yaml","MessageHandler.js","Sidebar.js","dice.svg","star.svg","PlayerSelectModal.js","MainScreen.js","JackboxGameList.js","AuthenticatedApp.js","App.js","reportWebVitals.js","index.js"],"names":["fetch","require","ActivityStatus","ChatActivity","channel","updateLastMessageTime","user","lastMessageTimes","Date","now","minsSinceLastChatMessage","Math","floor","getChatters","then","r","json","res","chatters","moderators","viewers","staff","admins","global_mods","catch","e","this","getStatusPromise","bind","a","includes","GameRequest","props","getFormattedTimeDiff","timestamp","unit","timeDiff","updateStatus","getActivity","metadata","username","activityStatus","setState","state","time","delete","onDelete","gameName","toggleLock","getTooltipContents","statusClass","lockOpacity","locked","cardStatus","chosen","effect","place","id","className","data-tip","data-html","onMouseEnter","style","margin","padding","fontSize","display","justifyContent","alignItems","src","lock","alt","width","opacity","paddingRight","onClick","type","Component","tmi","GAME_REQUEST_COMMAND","MessageHandler","isModOrBroadcaster","modList","toLowerCase","checkForMiscCommands","message","startsWith","sendMessage","process","requestedGame","replace","trim","gameObj","findGame","name","partyPack","changeNextGameIdx","upcomingGames","length","console","log","numGamesAhead","setNextGame","caniplayHandler","sendConfirmationMsg","redeemingUser","isPrioritySeat","playerExitHandler","clearQueueHandler","openQueueHandler","closeQueueHandler","startGame","partyPackName","validGames","partyPackObj","Object","entries","formalGameName","Variants","longName","checkForGameCommand","onMessage","target","tags","msg","self","cleanedMsg","messages","prevRequestedGameName","addGameRequest","upcoming","i","client","say","identity","password","access_token","channels","on","connect","rawJackboxGameList","text","YAML","parse","Sidebar","printGame","idx","nextGameIdx","color","history","moveNextGameFwd","moveNextGameBack","hasNextGame","getNextGameName","getNextGamePartyPack","index","marginLeft","requestMode","textTransform","backgroundColor","borderRadius","marginTop","marginBottom","fontWeight","disabled","togglePlayerSelect","marginRight","map","playedGame","PlayerSelectModal","updateColumnSizes","columnWidth","firstColumn","current","offsetWidth","handleNewPlayerRequest","column","isQueueOpen","updateColumnForUser","interested","uObj","playing","joined","userObj","newColumn","removeUser","filter","iObj","pObj","jObj","clearQueue","openQueue","closeQueue","playerCount","streamerSeat","toggleStreamerSeat","canStartGame","game","randomizePlayers","randIdx","randUsername","numPlayersToAdd","min","randIdxArray","randUsernameArray","random","push","renderPlayerCard","curColumn","star","maxWidth","renderStreamerSeatToggle","class","defaultChecked","onChange","aria-hidden","renderPlayerCount","React","createRef","window","addEventListener","startGameClass","ref","paddingTop","height","dice","randomColor","MainScreen","delta","counter","stateCopy","override","slice","max","addGameToQueue","onWheelSpun","gameLongName","gameRequestObj","requester","chatActivity","status","messageHandler","setTimeout","removeGame","newMessageObj","showPlayerSelectModal","routePlayRequest","playerSelector","routeLeaveRequest","routeOpenQueueRequest","routeCloseQueueRequest","routeClearQueueRequest","colors","count","luminosity","hue","logOutBtn","gameRequestArray","keys","onLogout","position","top","right","paddingBottom","mh","flexGrow","ps","overflow","segments","segColors","onFinished","isOnlyOnce","size","upDuration","downDuration","primaryColor","contrastColor","fontFamily","PartyPackCard","gameList","possibleMatches","GameCard","possibleMatch","JackboxGameList","partyPackList","AuthenticatedApp","localStorage","getItem","failed_login","getAuth","logOut","headers","Authorization","userInfo","setItem","data","login","modInfo","modObj","user_name","removeItem","URLSearchParams","client_id","token","redirect_uri","method","Accept","location","reload","error","queryParams","queryString","search","grant_type","code","client_secret","oauth","pathname","to","withRouter","loginScreen","loginUrl","href","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c8d051e.chunk.js","sourcesContent":["const fetch = require('node-fetch');\n\nexport const ActivityStatus = {\n  ACTIVE: 1,\n  IDLE: 2,\n  DISCONNECTED: 3\n};\n\nconst MAX_IDLE_TIME_MINUTES = 10;\n\nexport default class ChatActivity {\n  constructor(channel) {\n    this.channel = channel;\n    this.lastMessageTimes = {};\n    this.getStatusPromise = this.getStatusPromise.bind(this);\n  }\n\n  updateLastMessageTime = (user) => {\n    this.lastMessageTimes = {\n      ...this.lastMessageTimes,\n      [user]: Date.now()\n    };\n  }\n\n  minsSinceLastChatMessage = (user) => {\n    return Math.floor((Date.now()-this.lastMessageTimes[user])/60000);\n  }\n\n  // returns a PROMISE, don't just assign the value again like a dweeb. :/\n  //\n  // not just active chatters - anyone with an active connnection to twitch chat.\n  // (thank the lord almighty for free open proxy sites. CORB is annoying.)\n  // note that results are fairly heavily cached, and the API may break\n  // eventually (is undocumented), but this is what twitch themselves\n  // uses to display the list of people connected to chat - best we got.\n  getChatters = () => {\n    return fetch(`https://thingproxy.freeboard.io/fetch/https://tmi.twitch.tv/group/user/${this.channel}/chatters`)\n      .then(r => r.json())\n      .then(res => {\n        if(!res || !res.chatters) return null;\n        return [\n          ...res.chatters.moderators,\n          ...res.chatters.viewers,\n          ...res.chatters.staff,\n          ...res.chatters.admins,\n          ...res.chatters.global_mods\n        ];\n      })\n      .catch((e) => {\n        // don't normally like swallowing errors like this,\n        // but it's a noncritical feature built off an\n        // undocumented api, sooo....\n        return null;\n      })\n  }\n\n  async getStatusPromise(user) {\n    // broadcaster always counts as active\n    if(user === this.channel) {\n      return ActivityStatus.ACTIVE;\n    }\n\n    // sent a chat message in the last X mins?\n    if(this.lastMessageTimes[user] && this.minsSinceLastChatMessage(user) < MAX_IDLE_TIME_MINUTES) {\n      return ActivityStatus.ACTIVE;\n    }\n\n    return this.getChatters().then((chatters) =>\n      !chatters || !chatters.includes(user)\n          ? ActivityStatus.DISCONNECTED\n          : ActivityStatus.IDLE\n    );\n  }\n\n}\n","export default __webpack_public_path__ + \"static/media/lock.6857c469.svg\";","import { Component } from 'react';\nimport ReactTooltip from 'react-tooltip'\nimport { ActivityStatus } from './ChatActivity';\nimport './messageStyles.css';\nimport lock from './lock.svg';\n\nexport default class GameRequest extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      timeDiff: 0,\n      activityStatus: null\n    };\n  }\n\n  getFormattedTimeDiff = (timestamp) => {\n    let unit = \"minute\";\n    let timeDiff = Math.floor((Date.now()-timestamp)/60000);\n    if(timeDiff === 0) {\n      return \"just now\";\n    }\n    if(timeDiff >= 60) {\n      unit = \"hour\";\n      timeDiff = Math.floor(timeDiff/60);\n\n      if(timeDiff >= 24) {\n        unit = \"day\";\n        timeDiff = Math.floor(timeDiff/24);\n      }\n    }\n    return `${timeDiff} ${unit}${timeDiff === 1 ? \"\" : \"s\"} ago`;\n  }\n\n  updateStatus = () => {\n    // return Date.now();\n    this.props.getActivity(this.props.metadata.username).then((activityStatus) => {\n      this.setState(() => {\n        return {\n          ...this.state,\n          timeDiff: this.getFormattedTimeDiff(this.props.metadata.time),\n          activityStatus\n        };\n      });\n    })\n  }\n  delete = (e) => {\n    this.props.onDelete(this.props.gameName)\n  }\n\n  toggleLock = () => {\n    this.props.toggleLock(this.props.gameName)\n  }\n\n  getTooltipContents = () => {\n    let statusClass = \"\";\n    switch(this.state.activityStatus) {\n      case ActivityStatus.ACTIVE:\n        statusClass = \"active\";\n        break;\n      case ActivityStatus.IDLE:\n        statusClass = \"idle\";\n        break;\n      case ActivityStatus.DISCONNECTED:\n        statusClass = \"disconnected\";\n        break;\n      default:\n        // no data back yet; don't show an activity status indicator at all\n        break;\n    }\n\n    return (`\n      <div class=\"tooltip\">\n        <p class=\"tooltipText\">Requested ${this.state.timeDiff} by ${this.props.metadata.username}</p>\n        <div class=\"status ${statusClass}\" />\n      </div>`);\n  }\n\n  render() {\n    const lockOpacity = this.props.metadata.locked ? '1' : '0.2';\n    const cardStatus = this.props.metadata.chosen ? 'chosen' : 'pending';\n    return (\n      <div>\n      <ReactTooltip effect=\"solid\" place=\"right\"/>\n      <div\n        id=\"baseDiv\"\n        className={cardStatus}\n        data-tip={this.getTooltipContents()}\n        data-html={true}\n        onMouseEnter={this.updateStatus}\n      >\n      <div style={{margin: '0px 15px 7px', padding: '4px', fontSize: '16px', display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\n        {this.props.gameName}\n        <div style={{display:'flex'}}>\n          <img src={lock} alt=\"lock\" style={{width: '16px', opacity: lockOpacity, paddingRight: '8px'}} className=\"lock\" onClick={this.toggleLock} />\n          <button type='button' className=\"deleteButton\" onClick={this.delete}>X</button>\n        </div>\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/JackboxGames.4c8eefaa.yaml\";","import { Component } from 'react';\r\nimport YAML from 'yaml'\r\nimport rawJackboxGameList from './JackboxGames.yaml';\r\nconst fetch = require('node-fetch');\r\nconst tmi = require('tmi.js');\r\n\r\nconst GAME_REQUEST_COMMAND = \"!request\";\r\n\r\nexport default class MessageHandler extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client: null,\r\n      validGames: []\r\n    };\r\n  }\r\n\r\n  componentDidMount(props) {\r\n    const client = new tmi.client({\r\n      identity: {\r\n        username: this.props.channel,\r\n        password: this.props.access_token\r\n      },\r\n      channels: [\r\n        this.props.channel\r\n      ]\r\n    });\r\n\r\n    client.on('message', this.onMessage);\r\n    client.connect();\r\n\r\n    fetch(rawJackboxGameList)\r\n      .then(r => r.text())\r\n      .then(text => {\r\n        this.setState((state) => {\r\n          return {\r\n            ...state,\r\n            client,\r\n            validGames: YAML.parse(text)\r\n          };\r\n        });\r\n      })\r\n    }\r\n\r\n  isModOrBroadcaster = (username) => {\r\n    return (this.props.channel === username || this.props.modList.includes(username.toLowerCase()));\r\n  }\r\n\r\n  // returns true iff a known command was found & responded to\r\n  checkForMiscCommands = (message, username) => {\r\n    //========= general =========\r\n    if(message.startsWith(\"!gamelist\") || message.startsWith(\"!gameslist\")) {\r\n      this.sendMessage(`/me @${username}, click here for a list of valid Jackbox games: ${process.env.REACT_APP_REDIRECT_URI_NOENCODE}/gamelist`);\r\n      return true;\r\n    }\r\n\r\n    if(message === \"!wheelcommands\") {\r\n      this.sendMessage(`/me @${username}, click here to read about all supported commands: https://github.com/asukii314/twitch-request-wheel/blob/master/src/Commands.yaml`);\r\n      return true;\r\n    }\r\n\r\n    if(message.startsWith(\"!whichpack\")) {\r\n      const requestedGame = message.replace(\"!whichpack\", \"\").trim();\r\n      if(requestedGame === \"\") {\r\n        this.sendMessage(`/me @${username}, please specify the game you would like to look up the party pack for: e.g. !whichpack TMP 2`);\r\n        return true;\r\n      }\r\n\r\n      const gameObj = this.findGame(requestedGame, username);\r\n      if(gameObj) {\r\n        this.sendMessage(`/me @${username}, ${gameObj.name} is a ${gameObj.partyPack} game.`);\r\n      }\r\n      return true;\r\n    }\r\n\r\n    //========= advance next game =========\r\n    if(message === \"!advancenextgame\" || message === \"!nextgamefwd\" || message === \"!nextgameforward\") {\r\n      if(!this.isModOrBroadcaster(username)){\r\n        this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\r\n        return true;\r\n      }\r\n      if(this.props.changeNextGameIdx(1)) {\r\n        if(this.props.upcomingGames.length > 0) {\r\n          console.log(this.props.upcomingGames)\r\n          this.sendMessage(`/me @${username}, the next game has been changed to ${this.props.upcomingGames[0].name}.`);\r\n        } else {\r\n          this.sendMessage(`/me @${username}, the next game has been marked as \"TBD\".`);\r\n        }\r\n      } else {\r\n        this.sendMessage(`/me @${username}, there are no more games in the queue to advance to!`);\r\n      }\r\n      return true;\r\n    }\r\n\r\n    //========= advance next game =========\r\n    if(message === \"!nextgameback\" || message === \"!nextgamebackward\") {\r\n      if(!this.isModOrBroadcaster(username)){\r\n        this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\r\n        return true;\r\n      }\r\n      if(this.props.changeNextGameIdx(-1)) {\r\n        this.sendMessage(`/me @${username}, the next game has been changed to ${this.props.upcomingGames[0].name}.`);\r\n      } else {\r\n        this.sendMessage(`/me @${username}, there are no previous games in the queue to go back to!`);\r\n      }\r\n      return true;\r\n    }\r\n\r\n    //========= set next game =========\r\n    if(message.startsWith(\"!setnextgame\") || message.startsWith(\"!redeemgame\")) {\r\n      if(!this.isModOrBroadcaster(username)){\r\n        this.sendMessage(`/me @${username}, only channel moderators can use the ${message.startsWith(\"!s\") ? \"!setNextGame\" : \"!redeemgame\"} command.`);\r\n        return true;\r\n      }\r\n\r\n      const requestedGame = message.replace(\"!setnextgame\", \"\").replace(\"!redeemgame\", \"\").trim();\r\n      if(requestedGame === \"\") {\r\n        this.sendMessage(`/me @${username}, please specify the game you would like to insert in the queue: for example, ${message.startsWith(\"!s\") ? \"!setNextGame\" : \"!redeemgame\"} TMP 2`);\r\n        return true;\r\n      }\r\n\r\n      const gameObj = this.findGame(requestedGame, username);\r\n      if(gameObj) {\r\n        const numGamesAhead = this.props.setNextGame(gameObj);\r\n        if(numGamesAhead === 0) {\r\n          this.sendMessage(`/me @${username}, ${gameObj.name} has been inserted as the next game in the queue.`);\r\n        } else {\r\n          this.sendMessage(`/me @${username}, ${gameObj.name} has been inserted in the queue following ${numGamesAhead} other manual game request${numGamesAhead > 1 ? 's' : ''}.`);\r\n        }\r\n\r\n      }\r\n      return true;\r\n    }\r\n\r\n    //========= player queue management =========\r\n    if(message === \"!caniplay\" || message === \"!new\") {\r\n      this.props?.caniplayHandler(username, {\r\n        sendConfirmationMsg: message !== \"!new\"\r\n      });\r\n      return true;\r\n    }\r\n\r\n    if(message.startsWith(\"!priorityseat\") || message.startsWith(\"!redeemseat\")) {\r\n      if(!this.isModOrBroadcaster(username)){\r\n        this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\r\n        return true;\r\n      }\r\n      const redeemingUser = message.replace(\"!priorityseat\", \"\").replace(\"!redeemseat\", \"\").replace(\"@\", \"\").trim();\r\n      if(redeemingUser === \"\") {\r\n        this.sendMessage(`/me @${username}, please specify the user who has redeemed a priority seat in the next game: for example, ${message.startsWith(\"!p\") ? \"!priorityseat\" : \"!redeemseat\"} @asukii314`);\r\n        return true;\r\n      }\r\n      this.props?.caniplayHandler(redeemingUser, {\r\n        sendConfirmationMsg: true,\r\n        isPrioritySeat: true\r\n      });\r\n      return true;\r\n    }\r\n\r\n    if(message === \"!leave\" || message === \"!murd\") {\r\n      this.props?.playerExitHandler(username);\r\n      return true;\r\n    }\r\n\r\n    if(message === \"!clear\") {\r\n      if(this.isModOrBroadcaster(username)){\r\n        this.props?.clearQueueHandler();\r\n      }\r\n      return true;\r\n    }\r\n\r\n    if(message === \"!open\") {\r\n      if(this.isModOrBroadcaster(username)){\r\n        this.props?.openQueueHandler();\r\n      }\r\n      return true;\r\n    }\r\n\r\n    if(message === \"!close\") {\r\n      if(this.isModOrBroadcaster(username)){\r\n        this.props?.closeQueueHandler();\r\n      }\r\n      return true;\r\n    }\r\n\r\n    if(message === \"!startgame\") {\r\n      if(!this.isModOrBroadcaster(username)){\r\n        this.sendMessage(`/me @${username}, only channel moderators can use this command.`);\r\n        return true;\r\n      }\r\n      if(this.props.startGame()) {\r\n        this.sendMessage(`/me @${username}, the game has been started.`);\r\n      } else {\r\n        this.sendMessage(`/me @${username}, the game was already started.`);\r\n      }\r\n    }\r\n\r\n    if(message.startsWith(\"!redeem\")) {\r\n      this.sendMessage(`/me @${username}, this command is no longer supported: please specify either !redeemgame or !redeemseat.`);\r\n    }\r\n  }\r\n\r\n  findGame = (requestedGame, username) => {\r\n    for(let partyPackName in this.state.validGames) {\r\n      const partyPackObj = this.state.validGames[partyPackName]\r\n      for(const [formalGameName, metadata] of Object.entries(partyPackObj)){\r\n        if(metadata?.Variants?.includes(requestedGame)) {\r\n          return {\r\n            name: formalGameName,\r\n            longName: `${formalGameName} (${partyPackName})`,\r\n            partyPack: partyPackName,\r\n            ...metadata\r\n          };\r\n        }\r\n      }\r\n    }\r\n    this.sendMessage(`/me @${username}, ${requestedGame} could not be found in the list of valid Jackbox games. Click here for a list of valid games: ${process.env.REACT_APP_REDIRECT_URI_NOENCODE}/gamelist`);\r\n    return null;\r\n  }\r\n\r\n  checkForGameCommand = (message, username) => {\r\n    if(!message.startsWith(GAME_REQUEST_COMMAND)) return;\r\n\r\n    const requestedGame = message.replace(GAME_REQUEST_COMMAND, \"\").trim();\r\n\r\n    if(requestedGame === \"\") {\r\n      this.sendMessage(`/me @${username}, please specify the game you would like to request: for example, !request TMP 2`);\r\n      return null;\r\n    }\r\n\r\n    return this.findGame(requestedGame, username);\r\n  }\r\n\r\n  onMessage = (target, tags, msg, self) => {\r\n    if(self) return;\r\n    this.props.onMessage(msg, tags.username, tags)\r\n\r\n    if(msg.trim() === \"!nextgame\") {\r\n      if(this.props.upcomingGames && this.props.upcomingGames.length > 0) {\r\n        let upcoming = this.props.upcomingGames[0].name;\r\n        if(this.props.upcomingGames.length > 1) {\r\n          upcoming += `, followed by ${this.props.upcomingGames[1].name}`\r\n          for(let i = 2; i < this.props.upcomingGames.length; i++) {\r\n            upcoming += ` and ${this.props.upcomingGames[i].name}`\r\n          }\r\n        }\r\n        this.sendMessage(`/me @${tags.username}, the next game up is ${upcoming}!`)\r\n      } else {\r\n        this.sendMessage(`/me @${tags.username}, the next game hasn't been decided yet - feel free to !request one :)`)\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    const cleanedMsg = msg.trim().toLowerCase();\r\n    if(this.checkForMiscCommands(cleanedMsg, tags.username)) return;\r\n    const gameObj = this.checkForGameCommand(cleanedMsg, tags.username);\r\n    if (!gameObj) return;\r\n\r\n    if(this.props.messages[gameObj.longName]) {\r\n      this.sendMessage(`/me @${tags.username}, ${gameObj.name} has already been requested!`);\r\n      return;\r\n    }\r\n\r\n    let prevRequestedGameName = null;\r\n    for(const [gameName, metadata] of Object.entries(this.props.messages)) {\r\n      if(metadata.username === tags.username){\r\n        prevRequestedGameName = metadata.longName;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(prevRequestedGameName) {\r\n      if(this.props.channel === tags.username) {\r\n        this.sendMessage(`/me @${tags.username}, ${gameObj.name} has been added to the request queue. Your previous game request(s) weren't deleted, since you have special broadcaster privilege :P`);\r\n      } else {\r\n        this.props.onDelete(prevRequestedGameName);\r\n        this.sendMessage(`/me @${tags.username}, your previous request of ${prevRequestedGameName} has been replaced with ${gameObj.name}.`);\r\n      }\r\n    } else {\r\n      this.sendMessage(`/me @${tags.username}, ${gameObj.name} has been added to the request queue.`);\r\n    }\r\n\r\n    this.props.addGameRequest(gameObj, tags.username);\r\n  }\r\n\r\n  sendMessage = (msg) => {\r\n    this.state.client.say(this.props.channel, msg)\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n","import { Component } from 'react';\n\nexport default class Sidebar extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      index: 0\n    }\n  }\n\n  printGame = (idx) => {\n    if(idx === this.props.nextGameIdx) {\n      return (<b style={{color:'aquamarine'}}>{this.props.history[idx].name}</b>)\n    } else {\n      return this.props.history[idx].name\n    }\n  }\n\n  moveNextGameFwd = () => {\n    return this.props.changeNextGameIdx(1);\n  }\n\n  moveNextGameBack = () => {\n    return this.props.changeNextGameIdx(-1);\n  }\n\n  hasNextGame = () => {\n    return this.props.history.length > this.props.nextGameIdx;\n  }\n\n  getNextGameName = () => {\n    return this.hasNextGame()\n      ? this.props.history[this.props.nextGameIdx].name\n      : \"not yet decided\"\n  }\n\n  getNextGamePartyPack = () => {\n    return this.hasNextGame()\n      ? this.props.history[this.props.nextGameIdx].partyPack\n      : null\n  }\n\n  render() {\n    return (\n      <div style={{marginLeft: \"12px\", width: (this.props.requestMode === 'game' ? \"33%\" : \"20%\"), textTransform: 'capitalize'}}>\n        <div style={{backgroundColor: \"darkslategrey\", borderRadius: \"5px\", marginTop: 0, padding: '1px', marginBottom: '10px'}}>\n          <p style={{fontSize: \"14px\", fontWeight: \"700\", padding: '8px'}}> Up Next:\n            <p style={{marginBottom: '5px'}}>{this.getNextGameName()}</p>\n            <p style={{fontSize: \"11px\", fontWeight: \"400\", marginTop: '0px', color: \"lightgray\"}}><i>{this.getNextGamePartyPack()}</i></p>\n            {this.props.requestMode === 'game' && <button disabled={!this.hasNextGame()} onClick={this.props.togglePlayerSelect} style={{fontSize: \"12px\", padding: \"5px\", backgroundColor: \"aquamarine\", color: \"black\", borderRadius: \"5px\", width: \"90%\"}}>\n              {this.hasNextGame()\n                  ? <b>OPEN SEAT REQUESTS</b>\n                  : <i style={{color: \"gray\"}}>OPEN SEAT REQUESTS</i>}\n            </button>}\n            {this.props.requestMode === 'seat' && <button onClick={this.props.togglePlayerSelect} style={{fontSize: \"12px\", padding: \"5px\", backgroundColor: \"aquamarine\", color: \"black\", borderRadius: \"5px\", width: \"90%\"}}>\n              <b>RETURN TO WHEEL</b>\n            </button>}\n          </p>\n        </div>\n\n        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n          <button onClick={this.moveNextGameBack} style={{backgroundColor: \"darkcyan\", borderRadius: \"5px\", marginTop: 0, width: \"50%\", marginBottom: '20px', marginRight: '5px'}}> &#8678; </button>\n          <button onClick={this.moveNextGameFwd} style={{backgroundColor: \"darkcyan\", borderRadius: \"5px\", marginTop: 0, width: \"50%\", marginBottom: '20px', marginLeft: '5px'}}> &#8680; </button>\n        </div>\n\n        <div style={{backgroundColor: \"darkslategrey\", borderRadius: \"5px\", marginTop: 0, padding: '5px'}}>\n          <p style={{fontSize: \"14px\", fontWeight: \"700\"}}> History </p>\n          <p style={{fontSize: \"12px\"}}>\n            {this.props.history.map((playedGame, i) => <li key={i}>{this.printGame(i)}</li> )}\n            {this.props.history.length === 0 && <li key='0'>No games yet</li> }\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\n","export default __webpack_public_path__ + \"static/media/dice.021a7158.svg\";","export default __webpack_public_path__ + \"static/media/star.de82f684.svg\";","import React, { Component } from 'react';\r\nimport './playerSelect.css';\r\nimport dice from './dice.svg';\r\nimport star from './star.svg';\r\n\r\n// yes, I know it's not actually a modal, I changed my mind and I can't be arsed to change the class name\r\nexport default class PlayerSelectModal extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.firstColumn = React.createRef();\r\n    this.state = {\r\n      interested: [],\r\n      playing: [],\r\n      joined: [],\r\n      streamerSeat: false,\r\n      isQueueOpen: true\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateColumnSizes();\r\n    window.addEventListener(\"resize\", this.updateColumnSizes);\r\n  }\r\n\r\n  updateColumnSizes = () => {\r\n    this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        columnWidth: this.firstColumn.current.offsetWidth\r\n      };\r\n    })\r\n  }\r\n\r\n  handleNewPlayerRequest = (username, {isPrioritySeat=false}) => {\r\n    if(isPrioritySeat) {\r\n      // even if the queue is closed, still add them to the interested column for consideration\r\n      const column = (this.state.isQueueOpen ? 'playing' : 'interested');\r\n\r\n      return this.updateColumnForUser({username, isPrioritySeat}, column)\r\n        ? 'you have been successfully added to the lobby.'\r\n        : 'there was an error adding you to the lobby.';\r\n    }\r\n\r\n    if(this.state?.interested?.map((uObj) => uObj.username)?.includes(username)\r\n    || this.state?.playing?.map((uObj) => uObj.username)?.includes(username)\r\n    || this.state?.joined?.map((uObj) => uObj.username)?.includes(username)) {\r\n      return 'you are already in the lobby.';\r\n    }\r\n\r\n    if(!this.state.isQueueOpen) {\r\n      return 'the queue is currently closed; users have already been selected for this game.';\r\n    }\r\n    return this.updateColumnForUser({username}, 'interested')\r\n      ? 'you have successfully joined the lobby.'\r\n      : 'there was an error adding you to the lobby.';\r\n  }\r\n\r\n  updateColumnForUser = (userObj, newColumn) => {\r\n    if(!this.state || !this.state[newColumn]) return false;\r\n\r\n    this.removeUser(userObj.username);\r\n    this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        [newColumn]: [\r\n          ...state[newColumn],\r\n          userObj\r\n        ]\r\n      }\r\n    });\r\n    return true;\r\n  }\r\n\r\n  removeUser = (username) => {\r\n    return this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        interested: state.interested.filter((iObj) => iObj.username !== username),\r\n        playing: state.playing.filter((pObj) => pObj.username !== username),\r\n        joined:  state.joined.filter((jObj) => jObj.username !== username)\r\n      }\r\n    });\r\n  }\r\n\r\n  clearQueue = () => {\r\n    return this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        interested: [],\r\n        playing: [],\r\n        joined: []\r\n      }\r\n    })\r\n  }\r\n\r\n  openQueue = () => {\r\n    return this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        isQueueOpen: true\r\n      }\r\n    })\r\n  }\r\n\r\n  closeQueue = () => {\r\n    return this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        isQueueOpen: false\r\n      }\r\n    })\r\n  }\r\n\r\n  playerCount = () => {\r\n    return this.state.playing.length + this.state.joined.length +\r\n            (this.state.streamerSeat ? 1 : 0);\r\n  }\r\n\r\n  toggleStreamerSeat = () => {\r\n    this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        streamerSeat: !state.streamerSeat\r\n      }\r\n    });\r\n  }\r\n\r\n  canStartGame = () => {\r\n    return this.props.game?.['Max players'] >= this.playerCount() &&\r\n           this.props.game?.['Min players'] <= this.playerCount();\r\n  }\r\n\r\n  startGame = () => {\r\n    // clear for now; eventually, save elsewhere to report on user play history for that session\r\n    this.setState ((state) => {\r\n      return {\r\n        ...state,\r\n        interested: [],\r\n        playing: [],\r\n        joined: []\r\n      };\r\n    })\r\n    this.props.startGame();\r\n  }\r\n\r\n  randomizePlayers = () => {\r\n    const numPlayersToAdd = Math.min(\r\n      this.props.game['Max players'] - this.playerCount(),\r\n      this.state.interested.length\r\n    );\r\n\r\n    let randIdx, randUsername;\r\n    let randIdxArray = [], randUsernameArray = [];\r\n    let interested = this.state.interested;\r\n    let playing = this.state.playing;\r\n\r\n    while(randIdxArray.length < numPlayersToAdd) {\r\n      randIdx = Math.floor(Math.random() * this.state.interested.length);\r\n      if(!randIdxArray.includes(randIdx)) {\r\n        randIdxArray.push(randIdx);\r\n        randUsername = this.state.interested[randIdx].username;\r\n        randUsernameArray.push(randUsername);\r\n        playing = [\r\n          ...playing,\r\n          this.state.interested[randIdx]\r\n        ];\r\n      }\r\n    }\r\n    this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        interested: state.interested.filter((uObj) => !randUsernameArray.includes(uObj.username)),\r\n        playing\r\n      }\r\n    })\r\n  }\r\n\r\n  renderPlayerCard = (userObj, id, curColumn) => {\r\n    return (\r\n      <div key={id} className='playerCard'>\r\n        <div style={{display: 'flex'}}>\r\n          {userObj.isPrioritySeat === true && <img src={star} alt=\"Priority seat redemption\" style={{width: '16px', marginLeft: '3px'}}/>}\r\n          <p className='playerName' style={{maxWidth: this.state.columnWidth - 25}}>{userObj.username}</p>\r\n        </div>\r\n        <div className='changeColButtonsContainer'>\r\n        {curColumn !== 'interested' && <button className='changeCol' onClick={this.updateColumnForUser.bind(this, userObj, 'interested')}>Interested</button>}\r\n        {curColumn !== 'playing' && <button className='changeCol' onClick={this.updateColumnForUser.bind(this, userObj, 'playing')}>Playing</button>}\r\n        {/*curColumn !== 'joined' && <button className='changeCol' onClick={this.updateColumnForUser.bind(this, userObj, 'joined')}>Joined</button>*/}\r\n        <button className='changeCol' style={{backgroundColor: 'indianred'}} onClick={this.removeUser.bind(this, userObj.username)}>X</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderStreamerSeatToggle = () => {\r\n    return (\r\n      <div class='my-toggle-group'>\r\n      <p class='toggle-label'> Reserve seat for streamer? </p>\r\n        <div class='my-toggle'>\r\n            <input type=\"checkbox\" defaultChecked={true} onChange={this.toggleStreamerSeat}/>\r\n            <div class='my-toggle-text no' aria-hidden=\"true\">No</div>\r\n            <div class='my-toggle-text yes' aria-hidden=\"true\">Yes</div>\r\n            <div class='my-toggle-orb'></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderPlayerCount = () => {\r\n    let className = 'playerCount';\r\n    if(this.props.game?.['Max players'] < this.playerCount()) {\r\n      className += ' overlimit';\r\n    }\r\n    return (<p className={className}>{this.playerCount()} of {this.props.game?.['Max players']} seats claimed</p>)\r\n  }\r\n\r\n  render() {\r\n    let startGameClass = 'startGame';\r\n    if(this.playerCount() < this.props.game?.['Min players']){\r\n      startGameClass += ' disabled';\r\n    }\r\n    return (\r\n      <div className='playerSelectContainer'>\r\n        <div className=\"header\">\r\n          {this.renderStreamerSeatToggle()}\r\n          <div style={{marginTop: '10px'}}>\r\n          <b>{this.props.game?.name ?? \"TBD\"}</b>\r\n          {this.renderPlayerCount()}\r\n          </div>\r\n          <button className={startGameClass} onClick={this.startGame} disabled={!this.canStartGame()}>Start Game</button>\r\n        </div>\r\n        <div className='playerCardContainer'>\r\n          <div ref={this.firstColumn} className='playerCardColumn interested'>\r\n            <p style={{marginTop: '0', paddingTop: '10px', marginBottom: '10px', fontSize: '16px', fontWeight: 'bold'}}>Interested</p>\r\n            {this.state.interested.filter((iObj) => iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'interested') )}\r\n            {this.state.interested.filter((iObj) => !iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'interested') )}\r\n          </div>\r\n\r\n          <div className='playerCardColumn playing'>\r\n            <p style={{marginTop: '0', paddingTop: '10px', marginBottom: '10px', fontSize: '16px', fontWeight: 'bold'}}>Playing\r\n            <button className=\"dice\" style={{width: '25px', height: '25px', backgroundColor: 'greenyellow', borderRadius: '5px', marginLeft: '10px', padding: '0px'}} onClick={this.randomizePlayers}>\r\n              <img src={dice} style={{width:'100%', height: '100%'}}/>\r\n            </button>\r\n            </p>\r\n            {this.state.playing.filter((iObj) => iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'playing') )}\r\n            {this.state.playing.filter((iObj) => !iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'playing') )}\r\n          </div>\r\n\r\n          <div className='playerCardColumn joined'>\r\n            <p style={{marginTop: '0', paddingTop: '10px', marginBottom: '10px', fontSize: '16px', fontWeight: 'bold'}}>Joined</p>\r\n            {this.state.joined.filter((iObj) => iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'joined') )}\r\n            {this.state.joined.filter((iObj) => !iObj.isPrioritySeat).map((userObj, i) => this.renderPlayerCard(userObj, i, 'joined') )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from 'react';\nimport WheelComponent from 'react-wheel-of-prizes'\nimport GameRequest from './GameRequest'\nimport MessageHandler from './MessageHandler';\nimport Sidebar from './Sidebar'\nimport PlayerSelectModal from './PlayerSelectModal';\nimport ChatActivity, { ActivityStatus } from './ChatActivity';\nconst randomColor = require('randomcolor');\n\n\nexport default class MainScreen extends Component {\n  constructor(props){\n    super(props);\n    this.chatActivity = new ChatActivity(this.props.channel)\n    this.state = {\n      messages: {},\n      colors: randomColor({count: 99, luminosity: 'light', hue: 'blue'}),\n      counter: 0,\n      history: [],\n      nextGameIdx: 0,\n      showPlayerSelectModal: false\n    };\n  }\n\n  changeNextGameIdx = (delta = 1) => {\n    if(this.state.nextGameIdx + delta > this.state.history.length) return false;\n    if(this.state.nextGameIdx + delta < 0) return false;\n    this.setState((state) => {\n      return {\n        ...this.state,\n        nextGameIdx: state.nextGameIdx + delta\n      }\n    });\n    return true;\n  }\n\n  moveNextGameFwd = () => {\n    return this.changeNextGameIdx();\n  }\n\n  moveNextGameBack = () => {\n    return this.changeNextGameIdx(-1);\n  }\n\n  addGameRequest = (gameObj, user) => {\n    this.setState((state) => {\n      return {\n        ...state,\n        messages: {\n          ...this.state.messages,\n          [gameObj.longName]: {\n            ...gameObj,\n            username: user,\n            time: Date.now(),\n            locked: false,\n            chosen: false\n          }\n        },\n        counter: this.state.counter + 1\n      };\n    })\n  }\n\n  toggleLock = (game) => {\n    const stateCopy = {...this.state.messages[game]};\n    stateCopy.locked = !stateCopy.locked\n\n    this.setState(() => {\n      return {\n        ...this.state,\n        messages: {\n          ...this.state.messages,\n          [game]: stateCopy\n        }\n      }\n    });\n  }\n\n  // @return: the number of games ahead of this one, after successfully inserting in queue\n  // (i.e. if it's the very next game, return 0; if there's one ahead, return 1; etc)\n  setNextGame = (gameObj) => {\n    let idx = this.state.nextGameIdx;\n\n    // insert next game at next up position by default, but\n    //    *after* any other manually inserted games\n    while(idx < this.state.history.length && this.state.history[idx]?.override) {\n      idx++;\n    }\n\n    this.setState((state) => {\n      return {\n        ...state,\n        history: [\n          ...state.history.slice(0, Math.max(0, idx)),\n          {\n            ...gameObj,\n            override: true\n          },\n          ...state.history.slice(idx)\n        ]\n      }\n    })\n\n    return idx - this.state.nextGameIdx;\n  }\n\n  addGameToQueue = (gameObj) => {\n    // update history + game card highlight color\n    this.setState((state) => {\n      return {\n        ...state,\n        history: [\n          ...this.state.history,\n          {\n            ...gameObj,\n            override: false\n          }\n        ],\n        messages: {\n          ...state.messages,\n          [gameObj.longName]: {\n            ...state.messages[gameObj.longName],\n            chosen: true\n          }\n        }\n      }\n    })\n  }\n\n  onWheelSpun = (gameLongName) => {\n    const gameRequestObj = this.state.messages?.[gameLongName];\n    if(!gameRequestObj) return;\n\n    // send confirmation message in chat\n    const requester = gameRequestObj.username;\n    this.chatActivity.getStatusPromise(requester).then((status) => {\n      let msg = \"\";\n      switch(status) {\n        case ActivityStatus.DISCONNECTED:\n          msg = `/me ${gameRequestObj.name} just won the spin, but it doesn't seem like @${requester} is still around. Hope someone else wants to play!`\n          break;\n\n        case ActivityStatus.ACTIVE:\n          msg = `/me @${requester}, good news - ${gameRequestObj.name} just won the spin!`;\n          break;\n\n        case ActivityStatus.IDLE:\n        default:\n          msg += `/me @${requester}, good news - ${gameRequestObj.name} just won the spin! (I hope you're still around!)`;\n        }\n        this.messageHandler.sendMessage(msg);\n    })\n\n    this.addGameToQueue(gameRequestObj);\n\n    // remove card unless it's locked\n    if(!this.state.messages[gameLongName].locked) {\n      setTimeout(() => {\n        this.removeGame(gameLongName, true);\n      }, 2500);\n    }\n  }\n\n  removeGame = (gameLongName) => {\n    const newMessageObj = {...this.state.messages};\n    delete newMessageObj[gameLongName];\n    this.setState((state) => {\n      return {\n        ...state,\n        messages: newMessageObj,\n        counter: this.state.counter + 1\n      };\n    })\n  }\n\n  onMessage = (message, user, metadata) => {\n    this.chatActivity.updateLastMessageTime(user);\n  }\n\n  togglePlayerSelect = () => {\n    this.setState((state) => {\n      return {\n        ...state,\n        showPlayerSelectModal: !state.showPlayerSelectModal\n      }\n    })\n  }\n\n  routePlayRequest = (user, {sendConfirmationMsg = true, isPrioritySeat = false}) => {\n    const msg = this.state.showPlayerSelectModal\n                  ? this.playerSelector?.handleNewPlayerRequest(user, {isPrioritySeat})\n                  : 'sign-ups are currently closed; try again after this game wraps up!'\n\n    if(sendConfirmationMsg) {\n      this.messageHandler?.sendMessage(`/me @${user}, ${msg}`);\n    }\n  }\n\n  routeLeaveRequest = (user) => {\n    this.playerSelector?.removeUser(user);\n  }\n\n  routeOpenQueueRequest = () => {\n    this.setState((state) => {\n      return {\n        ...state,\n        showPlayerSelectModal: true\n      }\n    })\n    this.playerSelector?.openQueue();\n  }\n\n  routeCloseQueueRequest = () => {\n    this.playerSelector?.closeQueue();\n  }\n\n  routeClearQueueRequest = () => {\n    this.playerSelector?.clearQueue();\n  }\n\n  startGame = () => {\n    // I know this is a big ol' React sin, but I can't for the life of me\n    //   figure out why this.togglePlayerSelect() isn't working... sooo...\n    if(this.state.showPlayerSelectModal) {\n      this.state.showPlayerSelectModal = false;\n      this.moveNextGameFwd();\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    const gameRequestArray = Object.keys(this.state.messages);\n    let logOutBtn;\n    if (typeof this.props.onLogout === 'function') {\n        logOutBtn = (<button style={{position: 'absolute', top: 0, right: 0, backgroundColor: 'darkcyan', borderRadius: '5px', marginTop: 0, paddingBottom: '5px', paddingTop: '5px', color: '#fff'}} onClick={this.props.onLogout}>Logout &#10151;</button>);\n    }\n\n    return (\n      <div style={{display: 'flex'}}>\n        <MessageHandler\n          addGameRequest={this.addGameRequest}\n          setNextGame={this.setNextGame}\n          changeNextGameIdx={this.changeNextGameIdx}\n          startGame={this.startGame}\n          messages={this.state.messages}\n          channel={this.props.channel}\n          modList={this.props.modList}\n          access_token={this.props.access_token}\n          onMessage={this.onMessage}\n          onDelete={this.removeGame}\n          upcomingGames={this.state.history.slice(this.state.nextGameIdx)}\n          caniplayHandler={this.routePlayRequest}\n          playerExitHandler={this.routeLeaveRequest}\n          openQueueHandler={this.routeOpenQueueRequest}\n          closeQueueHandler={this.routeCloseQueueRequest}\n          clearQueueHandler={this.routeClearQueueRequest}\n          ref={(mh) => this.messageHandler = mh}\n        />\n        <div style={{width: this.state.showPlayerSelectModal ? \"90vw\" : \"45vw\"}}>\n\n          <h2 style={{marginBottom:\"0\"}}>{this.state.showPlayerSelectModal ? 'Seat Requests' : 'Game Requests'}</h2>\n          {!this.state.showPlayerSelectModal && <h4 style={{fontSize:\"20px\", color: \"yellow\", marginTop: \"6px\", marginBottom:\"12px\", fontWeight: 400}}>Type e.g. <b>\"!request Blather Round\"</b> in {this.props.channel}'s chat to add</h4>}\n          {this.state.showPlayerSelectModal && <h4 style={{fontSize:\"20px\", color: \"yellow\", marginTop: \"6px\", marginBottom:\"12px\", fontWeight: 400}}>Type <b>!new</b> in {this.props.channel}'s chat if you want to join the next game</h4>}\n          <div style={{display:\"flex\", alignItems: \"flex-start\", height:\"100%\"}}>\n          <Sidebar\n            history={this.state.history}\n            nextGameIdx={this.state.nextGameIdx}\n            changeNextGameIdx={this.changeNextGameIdx}\n            moveNextGameFwd={this.moveNextGameFwd}\n            moveNextGameBack={this.moveNextGameBack}\n            togglePlayerSelect={this.togglePlayerSelect}\n            requestMode={this.state.showPlayerSelectModal ? 'seat' : 'game'}\n          />\n          <div style={{flexGrow: \"2\", marginLeft: \"15px\"}}>\n            {this.state.showPlayerSelectModal &&\n              <PlayerSelectModal\n                game={this.state.history?.[this.state.nextGameIdx]}\n                startGame={this.startGame}\n                ref={(ps) => this.playerSelector = ps}\n              />}\n            {!this.state.showPlayerSelectModal && gameRequestArray.map((gameName, i) =>\n                <GameRequest\n                  key={i}\n                  gameName={gameName}\n                  metadata={this.state.messages[gameName]}\n                  onDelete={this.removeGame}\n                  toggleLock={this.toggleLock.bind(gameName)}\n                  getActivity={this.chatActivity.getStatusPromise}\n              />)}\n            </div>\n          </div>\n        </div>\n        {!this.state.showPlayerSelectModal && <div width=\"50vw\" style={{textTransform: 'capitalize'}}>\n          <div style={{fontSize: \"16px\", overflow: \"hidden\", width: \"600px\"}}>\n             <WheelComponent\n              key={this.state.counter}\n              segments={gameRequestArray}\n              segColors={this.state.colors}\n              onFinished={this.onWheelSpun}\n              isOnlyOnce={false}\n              size={250}\n              upDuration={100}\n              downDuration={1000}\n              primaryColor={\"white\"}\n              contrastColor={\"black\"}\n              fontFamily={\"Arial\"}\n            />\n          {/*  <Modal/>*/}\n          </div>\n        </div>}\n        {logOutBtn}\n      </div>\n    )\n  }\n}\n","import { Component } from 'react';\nimport YAML from 'yaml'\nimport rawJackboxGameList from './JackboxGames.yaml';\nimport './JackboxGameList.css';\nconst fetch = require('node-fetch');\n\nconst PartyPackCard = function (props) {\n  const gameList = Object.keys(props.metadata);\n  return (\n    <div className=\"partyPackCard\">\n      <p className=\"partyPackName\">{props.partyPackName} </p>\n      {gameList.map((gameName, i) =>\n        <GameCard\n          key={i}\n          gameName={gameName}\n          possibleMatches={props.metadata?.[gameName]?.Variants}\n        />\n      )}\n    </div>\n  );\n}\n\n\n// <p> {props.gameName} <p>\n\nconst GameCard = function(props) {\n  return (\n    <div>\n      <p className=\"gameName\">{props.gameName} </p>\n      {props.possibleMatches.map((possibleMatch, i) =>\n        <li className=\"possibleGameMatch\">!request {possibleMatch}</li>\n      )}\n    </div>\n  );\n}\n\nexport default class JackboxGameList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validGames: []\n    };\n  }\n\n  componentDidMount(props) {\n    fetch(rawJackboxGameList)\n      .then(r => r.text())\n      .then(text => {\n        this.setState((state) => {\n          return {\n            ...state,\n            validGames: YAML.parse(text)\n          };\n        });\n      })\n    }\n\n\n\n    render() {\n      const partyPackList = Object.keys(this.state.validGames);\n      return (\n        <div className=\"partyPackList\">\n          {partyPackList.map((partyPackName, i) =>\n            <PartyPackCard\n              key={i}\n              partyPackName={partyPackName}\n              metadata={this.state.validGames[partyPackName]}\n            />\n          )}\n        </div>\n      );\n    }\n\n}\n","\r\nimport React, { Component } from 'react';\r\nimport MainScreen from './MainScreen';\r\nimport JackboxGameList from './JackboxGameList';\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport queryString from 'query-string'\r\nconst fetch = require('node-fetch');\r\n\r\nclass AuthenticatedApp extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      username: localStorage.getItem('__username'),\r\n      access_token: localStorage.getItem('__access_token'),\r\n      failed_login: false\r\n    }\r\n    this.getAuth = this.getAuth.bind(this);\r\n    this.logOut = this.logOut.bind(this);\r\n  }\r\n  componentDidMount() {\r\n      if (!this.state.access_token) {\r\n          return this.getAuth();\r\n      }\r\n      fetch('https://api.twitch.tv/helix/users', {\r\n        headers: {\r\n          'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\r\n          Authorization: `Bearer ${this.state.access_token}`\r\n        }\r\n      })\r\n      .then(r => r.json())\r\n      .then(userInfo => {\r\n        //console.log(userInfo); //login [aka lowercase username?], display_name, profile_image_url, description\r\n\r\n        localStorage.setItem('__username', userInfo.data[0].login);\r\n        return fetch(`https://api.twitch.tv/helix/moderation/moderators?broadcaster_id=${userInfo.data[0].id}`, {\r\n          headers: {\r\n            'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\r\n            Authorization: `Bearer ${this.state.access_token}`\r\n          }\r\n        })\r\n        .then(r => r.json())\r\n        .then(modInfo => {\r\n          const modList = (!modInfo.data) ? null : modInfo.data.map((modObj) => modObj.user_name.toLowerCase())\r\n          this.setState((state) => {\r\n            return {\r\n              ...state,\r\n              username: userInfo.data[0].login,\r\n              modList\r\n            };\r\n          })\r\n        })\r\n      })\r\n      .catch(e => this.getAuth)\r\n  }\r\n\r\n  logOut() {\r\n      localStorage.removeItem('__username');\r\n      localStorage.removeItem('__access_token');\r\n      fetch('https://id.twitch.tv/oauth2/revoke?' + new URLSearchParams({\r\n        client_id: process.env.REACT_APP_TWITCH_CLIENT_ID,\r\n        token: this.state.access_token,\r\n        redirect_uri: process.env.REACT_APP_REDIRECT_URI_NOENCODE\r\n      }), {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/vnd.twitchtv.v5+json'\r\n        }\r\n      })\r\n      .then(() => {\r\n          window.location.reload();\r\n      });\r\n  }\r\n\r\n  async getAuth(e) {\r\n      if (e) {\r\n          console.error(e);\r\n      }\r\n      localStorage.removeItem('__username');\r\n      localStorage.removeItem('__access_token');\r\n\r\n    const queryParams = queryString.parse(this.props.location.search);\r\n    await fetch('https://id.twitch.tv/oauth2/token?' + new URLSearchParams({\r\n      grant_type: 'authorization_code',\r\n      code: queryParams.code,\r\n      client_id: process.env.REACT_APP_TWITCH_CLIENT_ID,\r\n      client_secret: process.env.REACT_APP_TWITCH_CLIENT_SECRET,\r\n      redirect_uri: process.env.REACT_APP_REDIRECT_URI_NOENCODE\r\n    }), {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/vnd.twitchtv.v5+json'\r\n      }\r\n    }).then(r => r.json())\r\n    .then((oauth) => {\r\n      //console.log(oauth); // access_token, refresh_token, expires_in, scope ['...']\r\n      if(!oauth.access_token) {\r\n        this.setState((state) => {\r\n          return {\r\n            ...state,\r\n            failed_login: true\r\n          };\r\n        });\r\n        return;\r\n      }\r\n\r\n      localStorage.setItem('__access_token', oauth.access_token);\r\n      this.setState((state) => {\r\n        return {\r\n          ...state,\r\n          access_token: oauth.access_token\r\n        };\r\n      });\r\n\r\n      fetch('https://api.twitch.tv/helix/users', {\r\n        headers: {\r\n          'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\r\n          Authorization: `Bearer ${oauth.access_token}`\r\n        }\r\n      })\r\n      .then(r => r.json())\r\n      .then(userInfo => {\r\n        //console.log(userInfo); //login [aka lowercase username?], display_name, profile_image_url, description\r\n        localStorage.setItem('__username', userInfo.data[0].login);\r\n        return fetch(`https://api.twitch.tv/helix/moderation/moderators?broadcaster_id=${userInfo.data[0].id}`, {\r\n          headers: {\r\n            'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\r\n            Authorization: `Bearer ${this.state.access_token}`\r\n          }\r\n        })\r\n        .then(r => r.json())\r\n        .then(modInfo => {\r\n          const modList = (!modInfo.data) ? null : modInfo.data.map((modObj) => modObj.user_name.toLowerCase())\r\n          this.setState((state) => {\r\n            return {\r\n              ...state,\r\n              username: userInfo.data[0].login,\r\n              modList\r\n            };\r\n          })\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.location.pathname === \"/gamelist\" && <JackboxGameList /> }\r\n        {this.state.failed_login && this.props.location.pathname !== \"/gamelist\"\r\n          ? <Redirect to=\"/login\" />\r\n          : this.state.username && <MainScreen\r\n                                      channel={this.state.username}\r\n                                      modList={this.state.modList}\r\n                                      access_token={this.state.access_token}\r\n                                      onLogout={this.logOut}\r\n                                    />}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(AuthenticatedApp);\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport AuthenticatedApp from './AuthenticatedApp';\nimport React, { Component } from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport JackboxGameList from './JackboxGameList';\n\nconst loginScreen = function() {\n  const scopes = \"chat:read chat:edit moderation:read\"\n  const loginUrl = `https://id.twitch.tv/oauth2/authorize?client_id=${process.env.REACT_APP_TWITCH_CLIENT_ID}&response_type=code&scope=${scopes}&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}`\n  return (\n    <a href={loginUrl} style={{backgroundColor: 'rebeccapurple', borderRadius: '5px', padding: '10px', color: 'white'}}>Log In With Twitch</a>\n  );\n}\n\nclass App extends Component {\n  render() {\n\n    return (\n      <HashRouter basename='/'>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Route exact path=\"/login\">\n              {loginScreen()}\n            </Route>\n            <Route path=\"/\" component={AuthenticatedApp} />\n            <Route path=\"/gamelist\" component={JackboxGameList} />\n          </header>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}