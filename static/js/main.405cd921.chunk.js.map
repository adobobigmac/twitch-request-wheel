{"version":3,"sources":["MessageHandler.js","AuthenticatedApp.js","App.js","reportWebVitals.js","index.js"],"names":["randomColor","require","tmi","GAME_REQUEST_COMMAND","GameRequest","delete","e","props","onDelete","msg","style","backgroundColor","textAlign","borderRadius","textTransform","margin","padding","fontSize","display","justifyContent","alignItems","this","type","onClick","float","height","color","Component","MessageHandler","onGameChosen","game","console","log","removeGame","newMessageSet","Set","state","messages","setState","counter","onMessage","target","tags","self","message","startsWith","replace","trim","toLowerCase","filterGameCommands","has","sendMessage","username","add","client","say","channel","colors","count","luminosity","hue","identity","password","access_token","channels","on","connect","JSON","stringify","gameArray","Array","from","width","marginBottom","marginTop","fontWeight","map","i","overflow","segments","segColors","onFinished","isOnlyOnce","size","upDuration","downDuration","primaryColor","contrastColor","fetch","AuthenticatedApp","failed_login","a","queryParams","queryString","parse","location","search","URLSearchParams","grant_type","code","client_id","process","client_secret","redirect_uri","method","headers","Accept","then","r","json","oauth","Authorization","userInfo","data","login","to","withRouter","loginScreen","loginUrl","href","App","basename","className","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.405cd921.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport WheelComponent from 'react-wheel-of-prizes'\r\nconst randomColor = require('randomcolor');\r\nconst tmi = require('tmi.js');\r\n\r\nconst GAME_REQUEST_COMMAND = \"!request\";\r\nconst column = function(width) {\r\n  return (<div style={{float:'left', width:width}} />);\r\n}\r\n\r\nconst filterGameCommands = function(message) {\r\n  if(!message.startsWith(GAME_REQUEST_COMMAND)) return;\r\n  return message.replace(GAME_REQUEST_COMMAND, \"\").trim().toLowerCase();\r\n}\r\n\r\n\r\nclass GameRequest extends Component {\r\n\r\n  delete = (e) => {\r\n    this.props.onDelete(this.props.msg)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{backgroundColor:'steelblue', textAlign: 'left', borderRadius: '8px', textTransform: 'capitalize'}}>\r\n      <p style={{margin: '15px', padding: '4px', fontSize: '24px', display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\r\n        {this.props.msg}\r\n        <button type='button' onClick={this.delete} style={{backgroundColor:'red', float: 'right', height: '50%', color: 'white', fontSize: '16px'}}>X</button>\r\n      </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class MessageHandler extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      messages: new Set(),\r\n      colors: randomColor({count: 99, luminosity: 'light', hue: 'blue'}),\r\n      counter: 0\r\n    };\r\n  }\r\n\r\n  onGameChosen = (game) => {\r\n    console.log(\"Game chosen: \" + game)\r\n  }\r\n\r\n  removeGame = (game) => {\r\n    console.log(game)\r\n    const newMessageSet = new Set(this.state.messages)\r\n    newMessageSet.delete(game)\r\n    this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        messages: newMessageSet,\r\n        counter: this.state.counter + 1\r\n      };\r\n    })\r\n  }\r\n\r\n  onMessage = (target, tags, msg, self) => {\r\n    const game = filterGameCommands(msg);\r\n    if (!game) return;\r\n    if(this.state.messages.has(game)) {\r\n      this.sendMessage(`/me @${tags.username}, ${game} has already been requested!`);\r\n      return;\r\n    }\r\n\r\n    const newMessageSet = new Set(this.state.messages).add(game)\r\n    this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        messages: newMessageSet,\r\n        counter: this.state.counter + 1\r\n      };\r\n    })\r\n    this.sendMessage(`/me @${tags.username}, ${game} has been added to the request queue.`);\r\n  }\r\n\r\n  sendMessage = (msg) => {\r\n    this.state.client.say(this.props.channel, msg)\r\n  }\r\n\r\n  componentDidMount(props) {\r\n    const client = new tmi.client({\r\n      identity: {\r\n        username: this.props.channel,\r\n        password: this.props.access_token\r\n      },\r\n      channels: [\r\n        this.props.channel\r\n      ]\r\n    });\r\n\r\n    client.on('message', this.onMessage);\r\n    client.connect();\r\n\r\n    console.log(JSON.stringify(client));\r\n\r\n    this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        client\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const gameArray = Array.from(this.state.messages);\r\n    return (\r\n      <div style={{display: 'flex'}}>\r\n        <column width=\"50vw\">\r\n          <h2 style={{marginBottom:\"0\"}}>Game Requests</h2>\r\n          <h4 style={{fontSize:\"12px\", marginTop: \"6px\", marginBottom:\"12px\", fontWeight: 400}}>Type e.g. \"!request Blather Round\" in {this.props.channel}'s chat to add</h4>\r\n          {gameArray.map((msg, i) => <GameRequest key={i} msg={msg} onDelete={this.removeGame}/>)}\r\n        </column>\r\n        <column width=\"50vw\" style={{textTransform: 'capitalize'}}>\r\n          <div style={{fontSize: \"16px\", overflow: \"hidden\", width: \"600px\"}}>\r\n            <WheelComponent\r\n              key={this.state.counter}\r\n              segments={gameArray}\r\n              segColors={this.state.colors}\r\n              onFinished={this.onGameChosen}\r\n              isOnlyOnce={false}\r\n              size={250}\r\n              upDuration={100}\r\n              downDuration={1000}\r\n              primaryColor={\"white\"}\r\n              contrastColor={\"black\"}\r\n            />\r\n          </div>\r\n        </column>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport MessageHandler from './MessageHandler';\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport queryString from 'query-string'\r\nconst fetch = require('node-fetch');\r\n\r\nclass AuthenticatedApp extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      access_token: \"\",\r\n      failed_login: false\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    const queryParams = queryString.parse(this.props.location.search);\r\n    await fetch('https://id.twitch.tv/oauth2/token?' + new URLSearchParams({\r\n      grant_type: 'authorization_code',\r\n      code: queryParams.code,\r\n      client_id: process.env.REACT_APP_TWITCH_CLIENT_ID,\r\n      client_secret: process.env.REACT_APP_TWITCH_CLIENT_SECRET,\r\n      redirect_uri: process.env.REACT_APP_REDIRECT_URI_NOENCODE\r\n    }), {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/vnd.twitchtv.v5+json'\r\n      }\r\n    }).then(r => r.json())\r\n    .then((oauth) => {\r\n      //console.log(oauth); // access_token, refresh_token, expires_in, scope ['...']\r\n      if(!oauth.access_token) {\r\n        this.setState((state) => {\r\n          return {\r\n            ...state,\r\n            failed_login: true\r\n          };\r\n        });\r\n        return;\r\n      }\r\n\r\n      this.setState((state) => {\r\n        return {\r\n          ...state,\r\n          access_token: oauth.access_token\r\n        };\r\n      });\r\n\r\n      fetch('https://api.twitch.tv/helix/users', {\r\n        headers: {\r\n          'Client-ID': process.env.REACT_APP_TWITCH_CLIENT_ID,\r\n          Authorization: `Bearer ${oauth.access_token}`\r\n        }\r\n      })\r\n      .then(r => r.json())\r\n      .then(userInfo => {\r\n        //console.log(userInfo); //login [aka lowercase username?], display_name, profile_image_url, description\r\n        this.setState((state) => {\r\n          return {\r\n            ...state,\r\n            username: userInfo.data[0].login,\r\n          };\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <p>\r\n        {this.state.failed_login\r\n          ? <Redirect to=\"/login\" />\r\n          : this.state.username && <MessageHandler channel={this.state.username} access_token={this.state.access_token} />}\r\n      </p>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(AuthenticatedApp);\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport AuthenticatedApp from './AuthenticatedApp';\nimport React, { Component } from 'react';\nimport { HashRouter, Route } from \"react-router-dom\";\n\nconst loginScreen = function() {\n  const loginUrl = `https://id.twitch.tv/oauth2/authorize?client_id=${process.env.REACT_APP_TWITCH_CLIENT_ID}&response_type=code&scope=chat:read chat:edit&redirect_uri=${process.env.REACT_APP_REDIRECT_URI}`\n  return (\n    <a href={loginUrl} style={{backgroundColor: 'rebeccapurple', borderRadius: '5px', padding: '10px', color: 'white'}}>Log In With Twitch</a>\n  );\n}\n\nclass App extends Component {\n  render() {\n\n    return (\n      <HashRouter basename='/'>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <Route exact path=\"/login\">\n              {loginScreen()}\n            </Route>\n            <Route path=\"/\" component={AuthenticatedApp} />\n          </header>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}